* release_history.txt
* Release history for Exit Games "Photon Server SDK"
(C) 2011 Exit Games GmbH, http://www.exitgames.com

Questions? Visit: 
    http://forum.exitgames.com
    http://developer.exitgames.com
Mail: 
    developer@exitgames.com


*** version 2.6.0
Core: 
- UPDATED:  native core rev445
- FIXED:    policy request peers were not disconnected. Policy Request Listeners now disconnect their clients after the response was sent.
- CHANGED:  Event.GetEventData does now accept short event codes
- FIXED:    ArgumentNull exception in Operation.GetErrorMessage if the one of the required parameters in the underlying OperationRequest was set to null
- REMOVED:  Method ServerToServer.TcpClientBase.SendEvent (server-to-server events are not supported)
- REMOVED:  Public visible class ServerToServer.TcpBinaryReader 
- CHANGED:  AMF3 protocol: Objects are now deserialized to Hashtable instead of Dictionary<string, object>.
- ADDED:    AMF3 protocol does now support int[], double[], long[], short[], float[], string[] and Hashtable[] parameters.
- FIXED:    Various AMF3 deserialization bugs (for Flash clients)
- ADDED:    New method IPhotonPeer.GetRemotePort() that returns the outgoing port the client connects with
- ADDED:    PhotonPeer.InitializeEncryption overload to specify the hashing algorithm and padding mode used for encryption
- CHANGED:  DiffieHellmanKeyExchange private key generation to rfc2631 parameter requirements
- CHANGED:  Floating licenses can now have a list of License Monitor URLs. This way, we can provide alternative Monitors per territory.
Lite:
- CHANGED:  Improved demo project "MyApplication"
- ADDED:    New method RoomCacheBase.TryGetRoomReference 
LiteLobby:
- FIXED:    LiteLobbyRoom.PublishGameList published EventListComplete with a reference to the current list of available games. This list was then read in different threads while possibly being modified in the room thread. LiteLobbyRoom.PublishGameList does now include a copy of this list when sending the event instead.
CounterPublisher:
- CHANGED:  Reading and publishing more relevant counters including (dynamic) network interface counters

*** version 2.4.7
Core: 
- UPDATED:  native core rev383.
- FIXED:    a potential deadlock in the client address list
- ADDED:    check for DotNet 3.5 and debug out if minimum runtime version is not met
- CHANGED:  no more logging for disconnect commands that are sent before the connection is established (could happen when client closes early)
MMO:
- REMOVED:  parameter from Mmo Item.GetItemSnapshot()
- FIXED:    Mmo ItemsnapshotRequest was not answered when item did not exist within world boundaries (affects manual subscriptions)

*** version 2.4.6
- FIXED:    Mmo BoundingBox.CreateFromPoints, Vector.Min and Vector.Max ignored Vector.Z
- FIXED:    Mmo GridWorld BoundingBox sets area BoundingBox.Min.Z to int.MinValue and Max.Z to int.MaxValue to allow any Z coordinate as GetRegion parameter. This fixes an issue where positions with Z != 0 would not subscribe to anything.
- FIXED:    Mmo GridWorld.GetRegionsExcept did not work as intended which lead to unexpected interesta area subscribe behavior
- FIXED:    Dashboard could not generate images when the path of photon contains white spaces

*** version 2.4.5
CHANGED:    configuration file for Photon is now named: PhotonServer.config (instead of PhotonSocketServer.xml or .config, which both clashed with dotnet config and help naming)
CHANGED:    EventData can now be serialized once for many receivers by sending class SerializedEventData (improves performance if many receivers use the same protocol)

*** version 2.4.2
- FIXED:    Dashboard will now start and find all required dlls
MMO:
- CHANGED:  EventData can now be serialized once for many receivers by sending class SerializedEventData (improves performance if many receivers use the same protocol)
- ADDED:    interface IEventData
- ADDED:    IEventData implementation SerializedEventData
PhotonControl:
- UPDATED:  PhotonControl to v2.0.9.1. This adds control to PerfMon logging to file. Find the new entries in menu "PerfMon Counters" to install/remove and start/stop logging
- UPDATED:  PhotonControl.exe.config which now includes command line options for logman (PerfMon commandline tool). The -si (Sample Interval) parameter is especially interesting. LogMan Doc: http://tinyurl.com/6yc83wz
- ADDED:   PerfMon to file logging setup in config file: deploy/bin_tools/perfmon/logman.config.txt

*** version 2.4.1
MMO:
- FIXED:   ArgumentException in GridWorld when moving interest area boundaries outside of world boundaries

*** version 2.4.0
- UPDATED: version number for release. see changes in 2.3.0

*** version 2.3.0
- ADDED:   The SDK now includes a testing client. The load test client "Stardust" is in \deploy\bin_Tools\stardust and can be run by Photon Control
- UPDATED: Photon Control to v2.0.8.0. This includes a new Photon submenu entry "Run Testclient" (starting the stardust client). If the \deploy\bin_Tools folder is not deployed, commands that need it are now disabled
- CHANGED: the Photon Core configuration filename is now: PhotonSocketServer.config (formerly PhotonSocketServer.xml, which was easily mixed up with the .xml documentations). This .config is not a DotNet app.config. Values are described in photon-configuration.pdf
- CHANGED: the binaries folder for the Windows 64 bit build is now bin_Win64 (was bin_x64).
- CHANGED: OperationResponse debug message is now optional and can be set to null.
- CHANGED: Added support for encrypted operation requests.
- FIXED:   concurrency.channel subscribe was not thread safe
- CHANGD:  libraries use a logging facade (usage of log4net is now optional)
- CHANGED: the default setup of applications is now set to shadowcopy and restart applications. By default, previous connections are held in old shadowcopy but new connections use the new logic. WatchFiles="dll;config" ExcludeFiles="log4net.config"
- FIXED:   bug in configuration. WatchFiles and ExcludeFiles did not work as expected. Now, WatchFiles always trigger a restart on change and anything that matches ExcludeFiles won't. Watch is matched first, Exclude is matched second (and overrides matching watches)
- CHANGED: 30DayTrial.license is now 30DayTemporary.license and only 100 Concurrent Users. Every developer/company can now get the personalized 100 CCU FREE license on the download page (where you get the SDK)
MMO:
- FIXED:   concurrency issue with Item.Spawn and InterestArea.UpdateRegionSubscriptions did sometimes lead to missing item subscription
- FIXED:   accessing the item rotation on subscribe was not thread safe (introducing extendable ItemSnapshot, see changes below)
- CHANGED: sending ItemSnapshot instead of ItemPositionMessage into region
- CHANGED: renamed RequestItemPositionMessage to ItemSnapshotRequest
- ADDED:   virtual method Item.GetItemSnapshot to allow customization of ItemSnapshot message (e.g. add rotation)
- ADDED:   virtual method Item.GetPositionUpdateMessage to allow customization of ItemPositionMessage
- CHANGED: replaced the multiple InterestArea.OnItemSubscribed parameters with just one parameter of type ItemSnapshot
- REMOVED: ICoordinate (not needed anymore since ItemSnapshot can be extended)  
- CHANGED: Response to ItemSnapshotRequest is now sent directly to the source InterestArea (was: sent through region to all interest areas) 
- CHANGED: InterestArea subclasses can now filter Item subscriptions (virtual method AutoSubscribeItem)
- ADDED:   struct BoundingBox (replaces IArea and RectangleArea)
- CHANGED: class Region does now have a coordinate (class GridRegion was removed)
- CHANGED: InterestArea does now make internal usage of BoundingBox for interest calculations
- CHANGED: renamed InterestArea.UpdateRegionSubscriptions to UpdateInterestManagement (InterestArea.UpdateRegionSubscriptions is now obsolete)
- ADDED:   public setter for Item.Position + method Item.UpdateInterestManagement (Item.Move and Item.Spawn are now obsolete)
- CHANGED: IWorld interface changed
- CHANGED: performance optimization of interest area updates
Lite:
- ADDED:   EstablishSecureCommunication operation to demonstrate the initialization process for encrypted operations.
- CHANGED: OperationRequestDispatcher class - A new virtual method 'GetRoomReference' has been added for better inheritance support.
- CHANGED: RoomCacheBase class - New virtual method 'OnRoomRemoved' has been added to allow custom actions in inherited classes.
- CHANGED: ExitGames.Concurrency ITimerControl interface has been removed. Fiber implementations now return IDisposable when calling the Schedule or ScheduleOnInterval methods.
- CHANGED: ExitGames.Concurrency - EnqueueAll method has been removed from Fiber implementations
- CHANGED: The Actors parameter in the RaiseEventOperation is now handled and allows to send custom events to specified peers in the room.
LiteLobby:
- CHANGED: no changes, aside from inherited ones of Lite
NetSync:
- ADDED:   NetSync application and demo client to Photon Server SDK (includes a Unity3d specific demo client)
- UPDATED: Readme.txt for NetSync. If you want to check out this demo, you should definitely read this file.

*** version 2.2.0
- ADDED:   support for multiple UDP and TCP listeners
- ADDED:   classes for TCP server-to-server communication 
- CHANGED: Lite, LiteLobby and CounterPublisher applications changed to publish counter values using udp protocol instead of pgm protocol.
- CHANGED: Photon.Dashboard - using udp protocol to receive counter data
- CHANGED: Photon.SocketServer.Application - New paramter of Type InitRequest containing informations about initilization request has been added to the abstract method CreatePeer.
- ADDED:   support for multi-dimensional arrays and arrays of hashtables
- CHANGED: peers can now flush outgoing messages ignoring the outgoing send delay
- ADDED:   .NET 4.0 support
- REMOVED: struct MethodReturnValue (source moved to mmo demo where it's still used)
- CHANGED: Vector does not implement ICoordinate anymore (to avoid unintentional usage of the Vector as Coordinate)

*** Version 2.0.5
- REMOVED: Photon.SocketServer.Rpc.Reflection.Operation - removed obsolete members PopulateParameters() and ErrorCodeInvalidOperationParameter (use IsValid and GetErrorMessage() instead)
- REMOVED: Photon.SocketServer.Mmo.Item - removed unncessary virtual members OnMove(), OnSpawn() and OnPropertiesSet()
- CHANGED: Lite.LiteGame - moved method ValidateOperation() to LitePeer
- CHANGED: Unit tests use new nunit 2.5.6
- ADDED:   Photon.SocketServer.Mmo.ICoordinate - new interface for coordinates that are exchanged among the clients
- REMOVED: implicit cast of Photon.SocketServer.Mmo.Vector from and to float array
- ADDED:   public getters for all Photon.SocketServer.Mmo.Actor interest areas and items
- ADDED:   Coordinate property to Photon.SocketServer.Mmo.Item and Photon.SocketServer.Mmo.InterestArea
- ADDED:   New ICoordinate parameter to virtual method Photon.SocketServer.Mmo.InterestArea.OnItemSubscribed
- CHANGED: Photon.SocketServer.Mmo.Item constructor and methods Move and Spawn expect ICoordinate instead of Vector
- UPDATED: PhotonControl with waiting "animation" while working and 30sec timeout to start service. Error description when "view log" fails is more descriptive
- ADDED:   deploy/bin_Win64_xp to support older 64bit Windows (older than Vista: XP and Win2003)
- FIXED:   Photon.SocketServer.Mmo.InterestArea.Coordinate setter caused StackOverflowException

*** Version 2.0.4
- CHANGED: Photon.SocketServer.Rpc.Reflection.Operation - Operation paramters are initialized during construction. No additional call on PopulateParameters is required anymore.
- ADDED:   Operation property IsValid, to determine if an operation has been initialized and is valid. There is also a new Method 'GetErrorMessage' to get a detailed descriptions of all errors during initialisation.
- CHANGED: Configuration file (PhotonSocketServer.xml). Multiple settings are removed and used with default values, streamlining the config.
- CHANGED: configuration for TCPListener is now optional (the node can be left out in PhotonSocketServer.xml)
- ADDED:   Configuration documentation: Photon-Configuration.pdf
- FIXED:   Photon shutdown for missing / expired licenses (did not finish)
- CHANGED: PhotonControl now opens the menu also on left-click
- CHANGED: PhotonControl icon is blinking while waiting for service to start (in this time the menu is not available)
- FIXED:   PhotonControl bug which prevented the logs from opening on older systems is also fixed
- UPDATED: Photon doc

*** Version 2.0.3 RC
- CHANGED: Photon now has a single policy listener which is used for Flash, Silverlight and Unity v3 at the same time
- CHANGED: PhotonSocketServer.xml accordingly
- CHANGED: Policy application accordingly to hand out policy files without trailing null

*** Version 2.0.2 RC5
- CHANGED: Applications get disconnect callbacks even when they caused them
- CHANGED: replaced flash and silverlight policy listeners by a single policy listener (internal in Photon Core)
- UPDATED: PhotonSocketServer.xml to use new policy listener (node name changed, please merge)
- CHANGED: Policy Application: no longer null-terminates policy-files for Flash
- FIXED:   Flash policy file included escape-characters that were only accepted by Flash (update your server's Policy App if needed)
- CHANGED: documentation for PhotonPeer.SendBufferFull, OperationQueue.OperationError, Application.Setup and some more
- CHANGED: xml doc (used automatically in VS) does now include remarks and example sections
- CHANGED: serialization optimization

*** Version 2.0.1 RC4
- ADDED:   More documentation
- FIXED:   MMO Items get fiber as parameter
- CHANGED: Photon.SocketServer.Mmo.Item - replaced Spawn, Move and PropertiesSet
- UPDATED: PhotonHostRuntimeInterfaces.dll (please re-build your applications with these!)
- CHANGED: Lite - disconnecting peer (unreliable) and calling onDisconnect in case send buffer is full (send buffer can be configured)
- CHANGED: Windows 2003 is now supported by the XP build. the regular 32 and 64 bit builds require Vista (and up) OS features (improved performance)
- FIXED:   bug with transmit rate limiter which could lead to stalling of transmission
- FIXED:   counter publisher app - config file was buggy
- FIXED:   Flash / Amf3 reader
- FIXED:   Performance counters are cleared on start ("total" counter-values were non-zero on re-start of Photon)
- CHANGED: Retransmission system for reliable UDP (tries to retransmit oldest not-acked commands first instead of "everything" to recover)
- CHANGED: photon.socketsrever - new debug logging for parsed rts init message
- CHANGED: lite - log4net config changes do not require a photon restart anymore
- CHANGED: PhotonSocketServer.xml settings to better suit the MMO Demo's requirements
- ADDED:   AckSendingDelayMilliseconds = 0 now means that the ack is sent immediately (experimental. more overhead, better reountrip time measure)

*** Version 2.0.0 RC3
- CHANGED: XP and Server2003 are now in the group of "old" operating systems (less performance, due to missing OS features)
- UPDATED: Photon_License_Terms.txt to reflect new License models (Free and Indie Licenses) and monitoring for Floating Licenses
- CHANGED: floating license monitor is now on Google App Engine (and highly available)
- FIXED:   handling of TCP connection. timeout no longer requires data to be sent to a peer to timeout
- FIXED:   UDP timeout more directly leads to a HandleDisconnect() callback in the application
- ADDED:   config values MaximumTimeout and MinimumTimeout to PhotonSocketServer.xml
- ADDED:   PhotonControl now offers "Open Logs" which opens PhotonCLR.log and Photon-Instance1-*.log immediately (required: bin-tools/baretail/**)
- CHANGED: PerfMon Counter installation will now delete outdated counters and install new ones (removes requirement to uninstall them before update)
- CHANGED: Counters (per instance and _total) are cleared on startup
- CHANGED: Photon Applications can now use app.config files as provided by Visual Studio. Add your own settings as shown in Lite.sln
- CHANGED: Runtime interfaces. Re-compile your applications with this SDK and its libraries

*** Version 2.0.0 RC2
- CHANGED: Major version number to 2, invalidating older licenses
- ADDED:   New Trial license for v2: starts a new trial time of 30 days with unlimited concurrent connections
- ADDED:   Counter Dashboard
- UPDATED: Photon Control (includes control of Counter Dashboard)
- ADDED:   PGM counter publisher - used to broadcast counter values over the network.
- CHANGED: Photon.SocketServer.Application/Peer: Added seperate logger for operation data logging.
- CHANGED: Peer SendOperationResponse and SendEvent returning SendResult
- ADDED:   XP 32bit build
- ADDED:   Photon starts are tracked
- CHANGED: Separated history files for SDK and applications (WIP)
- UPDATED: PhotonSocketServer.xml configuration has several new values and starts all 4 included applications by default
- FIXED:   Limit in TCP buffer size. TCP 
- ADDED:   Start tracking for Photon (no data is sent, just tracking starts)
- ADDED:   Floating licenses are monitored (making them floating)
- UPDATED: TCP handling, resulting in performance gains
- CHANGED: UDP logic for retransmissions: now older timeouts get repeated before later timeouts are re-sent (resulting in less traffic due to stall)

*** Version 1.7.0
- UPDATED: license terms

*** Version 1.6.2
- FIXED:   setup included a sample which was not in the package (caused server to shutdown)

*** Version 1.6.1
- FIXED:   rare exception in reference counters (PhotonSocketServer.exe) which might cause a crash
- CHANGED: service install is now as "autostart", making sure photon runs after a OS restart
- CHANGED: PhotonControl now requires Admin rights to run to be able to setup counters (and handle the processes)
- ADDED:   PhotonControl "open PerfMon" which shows the counters (when installed before photon-start)
- FIXED:   client count was not reduced in certain disconnect-scenarios

*** Version 1.6.0
- REMOVED: The Optional and Nullable Attributes for Operation paramters and return values have been removed. To mark a paramter/return value as optinal/nullable use the new properties IsOptional/IsNUllable of the OperationParamter and OperationReturnValue attributes.
- CHANGED: OperationParameterAttribute - added new property IsOptional
- CHANGED: OperationReturnValueAttribute - added new property IsNullable
- ADDED:   EventParameter attribute to support automatic event serialization with reflection (like OperationParameter).
- RENAMED: IEvent to ILiteEvent and moved interface declaration to Lite source code.
- CHANGED: IPeer.PublishEvent method paramters to EventData, Reliability

*** Version 1.5.0 

*** Version 1.4.0 (stable)
- CHANGED: update to the photon C/C++ core engine
- CHANGED: added support for AMF3 binary protocol (Flash 9+), Flash 9+ SDKs are in development and (alpha) released soon
- CHANGED: central solution is the "Lite.SocketApplication.sln" which links the "Lite.sln" Framework. This split was done as the new photon HTTP server can consume the same Lite Framework.
- CHANGED: the code to be stylecop conform (this is at 90% and not completed yet)
- CHANGED: the classes Room, RoomActor are noew available as source in "Lite.sln". This allows better extensibility and transparency for developers.
- CHANGED: Enhanced the counter sub system (support for in memory counters and windows perfromance counters)

*** Version 1.3.2
- FIXED:   bug where received older commands stalled the dispatching for one peer indefinitely (they are now skipped as expected)

*** Version 1.3.1
- CHANGED: from sbyte to byte type in Enums.cs, as the server's base is also using unsigned byte and the DotNet clients will, too
- ADDED:   "Policy" application to SDK to enable cross-domain connections from Flash and Silverlight clients
- ADDED:   basic documentation for the policy service

*** Version 1.3.0
- UPDATED: naming of all server components (now *Photon*)
- ADDED:   the peer's IP (useful when Photon is a "Master Server" for p2p games). sample in: LiteGame.HandleJoin()
- ADDED:   the port that a peer connects to (used when an application reacts differently on different ports)
- FIXED:   issue with shutdown (in some cases the service was not stoppable)
- MINOR:   updates on HostRuntime
- REMOVED: some redundant debug output
- ADDED:   "Performance monitoring" and "Client SDKs" topics to documentation

*** Version 1.1.3
- CHANGED: Room MessageChannel to type IMessage (allows implementation of costum Message classes)
- REMOVED: Room ProcessAction method. (Previous actions can be implementated as messages) 
- CHANGED: method ScheduleAction has been renamed to ScheduleMessage respectively+
- REMOVED: surplus class "Enums" and put all operation- and event-codes to Enums.cs into namespace Lite.Operations
- REMOVED: OperationCode.cs and moved enum of operations to Enums.cs as "OperationCodes"
- CHANGED: renamed list of operation keys "ParameterKey" to ParameterKeys and moved it to Enums.cs and namespace Lite.Operations
- CHANGED: renamed GameMessageCode to GameMessageCodes (for consistency)
- REMOVED: several this.function()-calls of methods that could be overridden are now used dynamically for overriding classes, depending on type
- REMOVED: Settings class (was no longer needed)
- CHANGED: renamed RC_F to RC_FATAL

*** Version 1.1.2
- CHANGED: server is now named "Photon"
- ADDED:   licensing terms and trial-license file
- CHANGED: use Realtime Server version 1.1.0
- UPDATED: documentation

*** Version 1.0.0
- UPDATED: to new Realtime architecture (using Retlang message based approach)

*** Version 0.9.0
- ADDED:   Initial SDK release