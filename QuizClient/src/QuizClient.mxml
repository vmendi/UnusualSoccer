<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="640" height="480" initialize="Start()"
			   backgroundColor.SingUp="#EA4B4B">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import ServerConnection.Constants;
			import ServerConnection.Photon;
			import ServerConnection.events.NewQuestionEvent;
			
			import Utils.MyFunctions;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.utils.ColorUtil;
			
			
			[Bindable]
			private var mConnection:QuizModel;
			
			private var timer:Timer;
			private var startTime:Number;
			private var endTime:Number;
			public var TimePerQuestion:int;
			/**
			 * Función que se encarga de controlar el cambio de estados de la aplicación 
			 */ 
			private function OnGameStateChanged(newGameState : String) : void
			{
				if( newGameState != currentState)
				{
					currentState = newGameState;
					switch (currentState)
					{
						case "Login":
							break;
						case "MainMenu":
							btnStartPlaying.enabled = mConnection.me.Logged;
							//BindingUtils.bindSetter(OnIsConnectedChanged, mConnection, "IsConnected");
							break;
						case "SingUp":
							imgWrongNick.visible = !mConnection.IsValidNick;
							BindingUtils.bindSetter(OnInvalidNick,mConnection,"IsValidNick");
							break;
						case "Playing":
							/*
							if( mConnection.CurrentQuestion != null)
								Photon.getInstance().addEventListener(NewQuestionEvent.TYPE, onNewQuestionArrives);
							*/
							//BindingUtils.bindSetter(OnResetAnswers,mConnection,"IsQuestionAnswered");
							//BindingUtils.bindSetter(OnNewQuestion,mConnection,"CurrentQuestion");
							break;
					}					
				}
			}			
			
			//================================================================================================||
			///////////////////////////////  Funciones para el STATE = "LOGIN"  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\||
			//================================================================================================||
			/**
			 * Fucion que se ejecuta al iniciar la App, es la encargada de conectarnos con la applicación
			 */ 
			public function Start():void
			{
				var mErrorMessages:ErrorMessages = new ErrorMessages();
				
				//addEventListener("onCloseConnection",ShowAlert);
				//Antes de nada, nos suscribimos al sistema de uncaught de Flash, para loggear los errores en el archivo de log del servidor
				
				
				//LoginOnAPP(123456789,"Sant","Ti");
				//LoginOnAPP(0001112223,"truño","mars");
				//LoginOnAPP(147852369,"Actor","Segundo");
				LoginOnAPP(11447788552,"Astracus","Mortimer");
				BindingUtils.bindSetter(OnGameStateChanged, mConnection, "ScreenState");
				BindingUtils.bindSetter(OnNewQuestion,mConnection,"CurrentQuestion");
				
				//if (this.loaderInfo.hasOwnProperty("uncaughtErrorEvents"))
					//IEventDispatcher(loaderInfo["uncaughtErrorEvents"]).addEventListener("uncaughtError", mErrorMessages.UncaughtErrorHandler);
			}
			
			/**
			 * Crea una instancia del cliente, y se conecta con el servidor
			 */			
			public function LoginOnAPP(faceBookId:int,name:String,surName:String):void
			{				
				Security.allowDomain("*");
				mConnection = new QuizModel();
				mConnection.FacebookID = faceBookId;
				mConnection.UserName = name;
				mConnection.UserSurName = surName;
			}
			
			/**
			 * Función encargada de meter al usuario en el Lobby de la App
			 */ 
			public function ConnectToLobby():void
			{
				//mConnection.ReturnToLobby();
			}
			
			
			public function OnNewQuestion(currentQuestion:QuizQuestion):void
			{
				if (currentQuestion != null) 
				{
					rectAcierto.visible = false;
					rectFallo.visible   = false;
					TimePerQuestion = mConnection.CurrentQuestion.Duration;
					onStartTimer();
				}
			}
			
			//================================================================================================||
			//////////////////////////////// Funciones para el STATE = "SignUp" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\||
			//================================================================================================||
			/**
			 * Esta función se encarga de que el cliente haga una llamada al servidor, pidiendole que nos de 
			 * de alta en la BBDD con el nick deseado (siempre que no exista uno igual). 
			 */ 
			public function SingUpOnApp():void
			{ 
				var selectedNick:String = this.txtNick.text;
				mConnection.SingUpWithThiNick(selectedNick);
			}
						
			//Function, que si la encganchas, avisa ante un Nick Invalido.
			public function OnInvalidNick(v:Boolean):void
			{
				imgWrongNick.visible = !mConnection.IsValidNick;
			}
						
			//================================================================================================||
			/////////////////////////////// Funciones para el STATE = "MAINMENU" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\||
			//================================================================================================||
			
			public function StartQuizGame():void
			{
				
				// Informa al server que queremos incorporarnos a una partida o si no hay ninguna creada, 
				// la creamos desde cero. Primero volveremos al Lobby.
				mConnection.setState(GameFeatures.STATE_START_GAME_REQUESTING);
			}
			
			/**
			 * sends a chat messages when user releases the ENTER key
			 * 
			 * @param event
			 */
			private function onKeyUpCheckEnter(event:KeyboardEvent) : void 
			{
					var cadenaValida:Boolean = (MyFunctions.trim(txtMessage.text).length > 0) 
					if(cadenaValida)
					{
						btnSendMessage.enabled = true;
						if (event.keyCode == Keyboard.ENTER) 
						{
							sendMyMessage();
						}
					}
					else
					{
						btnSendMessage.enabled = false;
					}
			}
			
			public function sendMyMessage():void
			{
				mConnection.sendChatMessage(txtMessage.text);
				txtMessage.text = "";
				btnSendMessage.enabled = false;
			}    	
			
			public function ChooseThisAnswers(opt:int):void
			{
				var resp:Boolean;
				if(opt == mConnection.CurrentQuestion.Solution)
				{
					rectAcierto.visible = true;
					resp = true;
				}
				else
				{
					rectFallo.visible = true;
					resp = false;
				}
				mConnection.SendMySelectedAnswer(opt, resp);
			}
			
			
			private function onStartTimer():void{
				startTime = new Date().time;
				endTime = new Date().time + Number(TimePerQuestion) * 1000;
				lblTimerCountDown.text = TimePerQuestion.toString();
				if(timer==null)
					timer = new Timer(500);
				timer.addEventListener(TimerEvent.TIMER, onTimerInterval);
				timer.start();
			}
			
			private function onTimerInterval(event:Event):void{
				var now:Number = new Date().time;
				if(endTime <= now){
					//startButton.enabled = secondsInput.enabled = true;
					//startButton.label = "Start Count Down";
				}else{
					lblTimerCountDown.text = Math.round((endTime - now)/1000).toString();
					timer.start();
				}
			}


			//================================================================================================||
			///////////////////////////////   Código antiguo STATE = "TRASH"    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\||
			//================================================================================================||

			/*
			//Envía un mensaje de chat a los participantes del Lobby/Room donde estes conectado
			public function sendMessage(nombre:String):void
			{
				mConnection.sendChatMessage("Hola a todos, soy " + nombre);
			}

			
			//Funcion que si la enganchas, avisa cuando te conectas con el servidor.
			private function OnIsConnectedChanged(isConnected : Boolean) : void
			{	
			if (isConnected)
			{
			//btnConnLobby.enabled = !mConnection.IsConnected;
			this["btnPlayer" +  (mConnection.ActorNum).toString()].enabled = true;					
			}
			}
			
			private var mTest:ArrayCollection= new ArrayCollection();
			
			protected function MyLabel_clickHandler(event:MouseEvent):void
			{
			// TODO Auto-generated method stub				 
			mTest.addItem("Test1");
			mTest.addItem("Test2");
			mTest.addItem("Test3");
			mTest.addItem("Test4");				
			}
			*/
		]]>
	</fx:Script>
	<s:states>
		<s:State name="Login"/>
		<s:State name="SingUp"/>
		<s:State name="MainMenu"/>
		<s:State name="Playing"/>
		<s:State name="trash"/>
		<!-- Crear mas estados en funcion de las necesidades-->		
	</s:states>
		
	<s:Group id="gTrash" x="114" y="0" width="407" height="470" contentBackgroundAlpha="1.0" includeIn="trash">
		<s:Rect id="gEstadoServidorBackGround" x="39" y="66" width="330" height="250">
			<s:fill>
				<s:SolidColor id="MainGameFill" color="#FFFFFF"/>
			</s:fill>			
		</s:Rect>
		<s:Label id="lblEsado" x="127" y="6" color="#ECCF2F" fontSize="16" fontWeight="bold"
				 text="Estado del Servidor:" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblEstadoValue" x="40" y="66" width="330" height="250" fontFamily="Verdana"
				 fontSize="10" fontWeight="bold" paddingBottom="5" paddingLeft="5" paddingRight="5"
				 paddingTop="5" text="{mConnection.ChatText}" textAlign="left" verticalAlign="bottom"/>
		<s:Rect x="5" y="370" width="65" height="16">
			<s:fill>
				<s:SolidColor id="bgFill" color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:Group id="ScorePlayer1" x="5" y="370" >
			<s:Rect width="65" height="16">
				<s:fill>
					<s:SolidColor id="bgFillPlayer1" color="#FFFFFF"/>
				</s:fill>		
			</s:Rect>			
			<s:Label id="valuePlayer1" width="65" height="16" fontWeight="bold"
					 text="ScorePlayer1" textAlign="center" verticalAlign="middle"/>
		</s:Group>
		
		<s:Group id="ScorePlayer2"  x="225" y="370" >		
			<s:Rect width="65" height="16">
				<s:fill>
					<s:SolidColor id="bgFillPlayer2" color="#FFFFFF"/>
				</s:fill>		
			</s:Rect>
			<s:Label id="valuePlayer2" width="65" height="16" fontWeight="bold"
					 text="ScorePlayer2" textAlign="center" verticalAlign="middle"/>
		</s:Group>
		
		<s:Group id="ScorePlayer3" x="337" y="370" >					
			<s:Rect width="65" height="16">
				<s:fill>
					<s:SolidColor id="bgFillPlayer3" color="#FFFFFF"/>
				</s:fill>		
			</s:Rect>
			<s:Label id="valuePlayer3" width="65" height="16" fontWeight="bold"
					 text="ScorePlayer3" textAlign="center" verticalAlign="middle"/>
		</s:Group>
		
		<s:Group id="ScorePlayer4" x="117" y="370">		
			<s:Rect width="65" height="16">
				<s:fill>
					<s:SolidColor id="bgFillPlayer4" color="#FFFFFF"/>
				</s:fill>		
			</s:Rect>
			<s:Label id="valuePlayer4" width="65" height="16" fontWeight="bold"
					 text="ScorePlayer4" textAlign="center" verticalAlign="middle"/>
		</s:Group>
		
	<!--	<s:Button id="btnPlayer1" x="10"  y="416" label="Player1" click="sendMessage('Player1')" enabled = "false"/>
		<s:Button id="btnPlayer2" x="117" y="416" label="Player2" click="sendMessage('Player2')" enabled = "false"/>
		<s:Button id="btnPlayer3" x="225" y="416" label="Player3" click="sendMessage('Player3')" enabled = "false"/>
		<s:Button id="btnPlayer4" x="337" y="416" label="Player4" click="sendMessage('Player4')" enabled = "false"/>		
		-->
		<s:Button id="btnConnLobby" x="40"  y="29" width="126" height="24" label="Connect to Lobby"  click="/*ConnectToLobby()*/"/>
		<s:Button id="btnConnRoom1" x="245" y="28" width="152" height="26" label="Connect to Room1"  click="/*ConnectToRoom1()*/"/>
		<s:TextArea id="Actors" x="6" y="23" width="101" height="145" text=""/>
	</s:Group>
	
	<s:Group includeIn="SingUp" x="0" y="0" width="640" height="480">
		<s:Image x="10" y="10" width="620" height="261" scaleMode="stretch" source="Assets/QuizLogo.gif"/>
		
		<s:Label id="lblNombre" x="98" y="310" width="232" height="18" fontFamily="Georgia"
				 fontSize="16" fontWeight="bold" text="Introduce tu nick:" textAlign="left"
				 verticalAlign="bottom"/>
		
		<s:TextInput id="txtNick" x="97" y="327" width="447"/>
		
		<s:Button id="btnValidar" x="474" y="349" label="Validar" click="SingUpOnApp()"/>
		
		<s:Image id="imgWrongNick" x="522" y="328" width="21" height="21" scaleMode="stretch"
				 source="Assets/red-cross.png" visible="false"/>
	</s:Group>
	
	<s:Group id="gMainMenu" includeIn="MainMenu" x="0" y="0" width="640" height="480">
		<s:Image id="imgBackground" includeIn="MainMenu" x="0" y="0" width="640" height="480"
				 source="@Embed('Assets/background.jpg')"/> 
		<s:Group id="gJoinGame" left="199" right="11" top="124" height="150">
			<s:Button id="btnStartPlaying" bottom="0" click="StartQuizGame()" enabled="false"
					  horizontalCenter="0" skinClass="Skins.QuizMainButton"/>
			<s:Label id="lblPlayTitle" bottom="0" width="100%" color="#FFFFFF" fontSize="24"
					 fontWeight="bold" horizontalCenter="0" text="Dale al pulsador para empezar"
					 textAlign="center" verticalAlign="middle"/>
		</s:Group>

		<s:Group id="gRoomActorsList" left="0" top="124" bottom="10" width="200">
			<s:List id="myList" left="10" right="10" height="100%"
					dataProvider="{mConnection.mRoomActors}"
					itemRenderer="ItemRenderers.MyListItemRenderer"></s:List>
		</s:Group>
		
		<s:Group id="gActorInfo" x="0" y="0" width="325" height="125">
			<s:Image id="imgFacebookAvatar" left="10" top="10" width="70" height="80"
					 scaleMode="stretch" source="Assets/DefaultAvatar.gif"/>
			
			<s:Label id="lblPersonalName" x="88" y="10" width="238" height="18" color="#646464"
					 fontSize="14" fontWeight="normal" text="{mConnection.me.ActorName + ' ' + mConnection.me.ActorSurName} "  textAlign="left"
					 verticalAlign="bottom"/>
			
			<s:Label id="lblNick" x="88" y="27" width="239" height="55" color="#DCDCDC" fontSize="70"
					 fontWeight="bold" text="{mConnection.me.ActorNick}" textAlign="left" verticalAlign="justify"/>
			
			
			<s:Label id="lblScoreTitle" left="30" bottom="15" width="43" height="18" color="#FFFFFF"
					 fontSize="14" fontStyle="normal" fontWeight="normal" text="Score:"
					 textAlign="right" verticalAlign="middle"/>
			<s:Label id="lblScore" left="81" bottom="15" width="100" height="20" color="#FFFFFF"
					 fontSize="15" fontWeight="normal" lineThrough="false"
					 text="{mConnection.me.ActorScore}" textAlign="right" verticalAlign="middle"/>
			<s:Image x="184" y="89" width="16" height="16" source="Assets/pointsIcon.png"/>
			<s:Label id="lblActorNo" x="10" y="10" width="30" height="30" color="#FF0000" fontWeight="bold" text="{mConnection.me.ActorNo}"/>
		</s:Group>
		
		<s:Group id="gChat" x="199" top="273" bottom="10" width="431">
			<s:TextArea id="txtChat" left="0" right="0" top="0" bottom="20" borderColor="#3C3C3C"
						borderVisible="true" color="#FFFFFF" contentBackgroundColor="#000000"
						editable="false" enabled="true" fontFamily="Courier New" fontWeight="normal"
						text="{mConnection.ChatText}"/>
			<s:TextInput id="txtMessage" left="0" right="60" bottom="0" height="20"
						 keyUp="onKeyUpCheckEnter(event)"/>
			
			<s:Button id="btnSendMessage" right="0" bottom="0" width="60" height="20" label="Enviar"
					  enabled="false"
					  click.MainMenu="sendMyMessage();"/>
		</s:Group>
	</s:Group>
	
	<s:Group id="gLoading" includeIn="Login" x="0" y="0" width="640" height="480">
		<s:Image id="imgLogin" x="0" y="0" width="640" height="480" scaleMode="zoom"
				 smooth="true" smoothingQuality="high" source="Assets/loading.gif"/>
	</s:Group>
	

	<s:Group includeIn="Playing" left="0" right="0" top="0" bottom="0" >
		<s:Rect id="rBackGround" includeIn="Playing" x="0" y="0" width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#005544"/>
			</s:fill>
		</s:Rect>
		<s:Rect id="rectAcierto" x="0" y="0" width="100%" height="100%" visible="false">
			<s:fill>
				<s:SolidColor color="#00FF00"/>
			</s:fill>
		</s:Rect>
		<s:Rect id="rectFallo" x="0" y="0" width="100%" height="100%"  visible="false">
			<s:fill>
				<s:SolidColor color="#FF0000"/>
			</s:fill>
		</s:Rect>
		<s:Group id="Question" includeIn="Playing" left="10" right="10" top="110" bottom="198" >
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#003c32" alpha="0.5"/>
				</s:fill>
			</s:Rect>
			<s:Label id="lblQuestion" width="100%" height="100%" color="#FFFFFF" fontFamily="Georgia"
					 fontSize="36" horizontalCenter="0" textAlign="center" verticalAlign="middle" verticalCenter="0" text="{mConnection.CurrentQuestion.Question}"/>
		</s:Group>
		
		<s:Group id="Answers" includeIn="Playing" left="10" right="10" bottom="10" height="150">
			<s:Rect x="0" width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#003c32" alpha="0.5"/>
				</s:fill>
			</s:Rect>
<!--		    <s:Button id="btnAnswer1" left ="10" top    ="25" width="300" height="50" label="{mConnection.Answ1}" click="ChooseThisAnswers(1)"/>
			<s:Button id="btnAnswer3" left ="10" bottom ="25" width="300" height="50" label="{mConnection.Answ2}" click="ChooseThisAnswers(2)"/>
			<s:Button id="btnAnswer2" right="10" top    ="25" width="300" height="50" label="{mConnection.Answ3}" click="ChooseThisAnswers(3)"/>
			<s:Button id="btnAnswer4" right="10" bottom ="25" width="300" height="50" label="{mConnection.Answ4}" click="ChooseThisAnswers(4)"/>-->
			<s:Button id="btnAnswer1" left ="10" top    ="25" width="300" height="50" label="{mConnection.CurrentQuestion.Answers.getItemAt(0)}" click="ChooseThisAnswers(1)"/>
			<s:Button id="btnAnswer3" left ="10" bottom ="25" width="300" height="50" label="{mConnection.CurrentQuestion.Answers.getItemAt(1)}" click="ChooseThisAnswers(2)"/>
			<s:Button id="btnAnswer2" right="10" top    ="25" width="300" height="50" label="{mConnection.CurrentQuestion.Answers.getItemAt(2)}" click="ChooseThisAnswers(3)"/>
			<s:Button id="btnAnswer4" right="10" bottom ="25" width="300" height="50" label="{mConnection.CurrentQuestion.Answers.getItemAt(3)}" click="ChooseThisAnswers(4)"/>
		</s:Group>
		<s:Label id="lblTimerCountDown" top="10" width="120" height="90" color="#FFFFFF"
				 fontSize="100" fontWeight="bold" horizontalCenter="0" text="{this.TimePerQuestion}" textAlign="center"
				 verticalAlign="middle"/>
		
		
	</s:Group>
	
	
</s:Application>
