<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 creationComplete="CreationCompleteHandler(event)" 
		 width="160" height="80">
	
	<fx:Style source="styles.css"/>
	
	<s:states>
		<s:State name="NotPurchased"/>
		<s:State name="Purchased"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import GameModel.MainGameModel;
			import GameModel.TeamModel;
			import GameModel.TeamPurchaseModel;
			
			import GameView.Purchase.PurchaseBase;
			
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			
			protected function CreationCompleteHandler(event:FlexEvent):void
			{
				mMainGameModel = SoccerClient.GetMainGameModel();
				mTeamModel = mMainGameModel.TheTeamModel;
				mTeamPurchaseModel = mMainGameModel.TheTeamPurchaseModel;
				
				BindingUtils.bindSetter(OnHasTicketChanged, mTeamPurchaseModel, ["HasTicket"]);
				BindingUtils.bindSetter(OnTicketRemainingMatchesChanged, mTeamModel, ["TheTeam", "TeamPurchase", "RemainingMatches"]);
			}
			
			private function OnTicketRemainingMatchesChanged(newVal : int) : void
			{
				if (newVal == 0)
				{
					MyZeroRemaining.visible = true;
					MyRemainingMatches.visible = false;
					MyRemainingMatchesTitle.visible = false;
				}
				else
				{
					MyZeroRemaining.visible = false;
					MyRemainingMatches.visible = true;
					MyRemainingMatchesTitle.visible = true;
				}
			}
			
			private function OnHasTicketChanged(hasTicket : Boolean) : void
			{
				if (hasTicket)
					currentState = "Purchased";
				else
					currentState = "NotPurchased";
			}
			
			protected function MyBuyTicketsButton_clickHandler(event:MouseEvent):void
			{
				PurchaseBase.ShowPurchase(getDefinitionByName("GameView.Purchase.PurchaseTicket") as Class);
			}
			
			private function FilterTicketExpiryDate(expiryDate : Date) : String
			{
				if (expiryDate == null)
					return "";
				
				// If our expiry date is more than 5 years away, it's forever!
				if (expiryDate.fullYear - new Date().fullYear > 5)
				{
					return "Unlimited Forever";
				}
				
				return expiryDate.toDateString();
			}
			
			private function FilterTicketExpiryTime(expiryDate : Date) : String
			{
				if (expiryDate == null)
					return "";
				
				if (expiryDate.fullYear - new Date().fullYear > 5)
					return "";
				
				return expiryDate.toLocaleTimeString();
			}
			
			[Bindable] private var mMainGameModel : MainGameModel;
			[Bindable] private var mTeamModel : TeamModel;
			[Bindable] private var mTeamPurchaseModel : TeamPurchaseModel;
		]]>
	</fx:Script>
	
	<!--<s:Image source="@Embed(source='/Assets/General.swf', symbol='TicketBg')" alpha.NotPurchased="1" alpha.Purchased="1" />-->
	
	<s:Group verticalCenter="0" horizontalCenter="0">
		<s:layout>
			<s:VerticalLayout gap="0" horizontalAlign="center" />
		</s:layout>
		<s:Group>
			<s:Group includeIn="NotPurchased" horizontalCenter="0">
				<s:layout>
					<s:HorizontalLayout gap="4" verticalAlign="middle" />
				</s:layout>
				<s:Label id="MyRemainingMatches" text="{mTeamModel.TheTeam.TeamPurchase.RemainingMatches}" styleName="blackBoldHuge" />
				<s:RichText id="MyRemainingMatchesTitle" styleName="blackBoldBig" whiteSpaceCollapse="collapse" textAlign="center" kerning="auto" >
					<s:content>
						<s:p><s:span>{resourceManager.getString('main','Matches')}</s:span></s:p>
						<s:p><s:span>{mTeamPurchaseModel.NewMatchRemainingSecondsString}</s:span></s:p>
					</s:content>
				</s:RichText>
				<s:filters>
					<s:DropShadowFilter angle="90" distance="0" blurX="8" blurY="8" color="0x000000" alpha="0.50" />
				</s:filters>
			</s:Group>
			
			<s:RichText id="MyZeroRemaining"  width="160" styleName="blackBoldMediumHN" whiteSpaceCollapse="collapse" textAlign="center" kerning="auto" >
				<s:content>
					<s:p><s:span>{resourceManager.getString('main','NotAvailableMatches')}</s:span></s:p>
					<s:p><s:span>{mTeamPurchaseModel.NewMatchRemainingSecondsString}</s:span></s:p>
				</s:content>
			</s:RichText>
				
			<s:Group includeIn="Purchased" left="0" right="0">
				<s:Label text="{FilterTicketExpiryDate(mTeamModel.TheTeam.TeamPurchase.TicketExpiryDate)}" styleName="whiteBoldBig" y="5" left="0" right="0" textAlign="center" />
				<s:Label text="{FilterTicketExpiryTime(mTeamModel.TheTeam.TeamPurchase.TicketExpiryDate)}" styleName="whiteBoldBig" y="20" left="0" right="0" textAlign="center" />
			</s:Group>
		</s:Group>
		<s:Button id="MyBuyTicketsButton"
				  label.NotPurchased="{resourceManager.getString('main','CompetitionBuyGameTimeButton')}"
				  label.Purchased="{resourceManager.getString('main','CompetitionBuyGameTimeButton')}"
				  click="MyBuyTicketsButton_clickHandler(event)"
				  skinClass="GameView.Skins.ButtonDarkGreySkin"
				  width="110" height="20"
				  />
	</s:Group>
	
	
</s:Group>
