<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:Match="GameView.Match.*" xmlns:GameView="GameView.*" xmlns:Friendly="GameView.Friendly.*"
		 creationComplete="CreationCompleteHandler(event)"
		 currentState="AvailableCredit"
		 addedToStage="AddedToStageHandler(event)"
		 >
	
	<fx:Style source="../styles.css"/>
	
	<s:states>
		<s:State name="Inactivity" />
		<s:State name="AvailableCredit" />
		<s:State name="OutOfCredit" />
	</s:states>
	
	
	<fx:Script><![CDATA[
		import GameModel.MainGameModel;
		import GameModel.RoomModel;
		
		import GameView.Purchase.PurchaseBase;
		import GameView.Skins.DefaultPanelSkin;
		
		import mx.binding.utils.BindingUtils;
		import mx.events.FlexEvent;
		
		import spark.events.IndexChangeEvent;
		
		
		protected function AddedToStageHandler(event:Event):void
		{
			GameMetrics.ReportPageView(GameMetrics.VIEW_FRIENDLY);
		}
		
		protected function CreationCompleteHandler(event:FlexEvent):void
		{			
			mMainGameModel = SoccerClient.GetMainGameModel();
			
			// La room puede ser null en distintas transciones
			BindingUtils.bindSetter(OnRoomModelChanged, mMainGameModel.TheRealtimeModel, [ "TheRoomModel" ]);
			BindingUtils.bindSetter(OnConnectionChanged, mMainGameModel.TheRealtimeModel, [ "IsConnected" ]);
		}
		
		private function OnConnectionChanged(isConnected : Boolean) : void
		{
			if (mMainGameModel.TheTicketModel.HasCredit)
			{
				if (isConnected)
					currentState = "AvailableCredit";
				else
					currentState = "Inactivity";
			}
			else
				currentState = "OutOfCredit";	
		}
		
		protected function MyConnectButton_clickHandler(event:MouseEvent):void
		{
			mMainGameModel.TheInactivityModel.LogNewActivity();
		}
		
		protected function OnRoomModelChanged(theRoomModel : RoomModel) : void
		{
			mRoomModel = theRoomModel;
		}
		
		protected function MyPlayersInRoomList_changeHandler(event:IndexChangeEvent):void
		{
			mMainGameModel.TheInactivityModel.LogNewActivity();
			
			mRoomModel.Selected = MyPlayersInRoomList.selectedItem;
			MyChallengesList.selectedItem = null;
		}
		
		protected function MyChallengesList_changeHandler(event:IndexChangeEvent):void
		{
			mMainGameModel.TheInactivityModel.LogNewActivity();
			
			mRoomModel.SelectedChallenge = MyChallengesList.selectedItem;
			MyPlayersInRoomList.selectedItem = null;
		}
		
	/*	protected function MyBuyTicketsButton_clickHandler(event:MouseEvent):void
		{
		 	PurchaseBase.ShowPurchase(getDefinitionByName("GameView.Purchase.PurchaseTicket") as Class);
		}
	*/	
		[Bindable] private var mMainGameModel : MainGameModel;
		[Bindable] private var mRoomModel : RoomModel;
		
	]]></fx:Script>
	
	<s:Group x="10" y="10" width="740" height="470" includeIn="OutOfCredit">
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelOnlineTitle')}"
				 width="423" height="303" left="0" top="0" controlBarVisible="true" />
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelChallengesTitle')}"
				 width="423" height="157" left="0" top="313" controlBarVisible="false" />
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelDefinitionTitle')}"
				 right="0" top="0" width="306" height="470" />
		<s:Group horizontalCenter="0" verticalCenter="0">
			<GameView:PopupBackground width="230" height="180" />
			<s:Group verticalCenter="0" horizontalCenter="0">
				<s:layout><s:VerticalLayout horizontalAlign="center" gap="10" /></s:layout>
				<s:BitmapImage source="@Embed(source='/Assets/General.swf', symbol='WarningIcon')" fillMode="clip" />
				<s:Label width="170" text="{resourceManager.getString('main','TicketNoAvailableTime')}" styleName="whiteBoldBig" textAlign="center" />
				<!--<s:Button id="MyBuyTicketsButton" width="110" height="18" x="40" y="41" skinClass="GameView.Skins.ButtonDarkGreySkin"
						  label="{resourceManager.getString('main','CompetitionBuyGameTimeButton')}"						  
						  click="MyBuyTicketsButton_clickHandler(event)" />-->
			</s:Group>
		</s:Group>
	</s:Group>
	
	<s:Group x="10" y="10" width="740" height="470" includeIn="Inactivity">
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelOnlineTitle')}"
				 width="423" height="303" left="0" top="0" controlBarVisible="true" />
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelChallengesTitle')}"
				 width="423" height="157" left="0" top="313" controlBarVisible="false" />
		<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelDefinitionTitle')}"
				 right="0" top="0" width="306" height="470" />
		<s:Group horizontalCenter="0" verticalCenter="0">
			<GameView:PopupBackground width="230" height="180" />
			<s:Group verticalCenter="0" horizontalCenter="0">
				<s:layout><s:VerticalLayout horizontalAlign="center" gap="10" /></s:layout>
				<s:BitmapImage source="@Embed(source='/Assets/General.swf', symbol='WarningIcon')" fillMode="clip" />
				<s:Label width="170" text="{resourceManager.getString('main','LookingForMatchPanelInactivity')}" styleName="whiteBoldBig" textAlign="center" />
				<s:Button id="MyConnectButton" width="110" height="18" x="40" y="41" skinClass="GameView.Skins.ButtonDarkGreySkin"
						  label="{resourceManager.getString('main','ConnectButton')}"
						  click="MyConnectButton_clickHandler(event)"/>
			</s:Group>
		</s:Group>
	</s:Group>
	
	<s:Group left="0" right="0" top="0" height="470" includeIn="AvailableCredit">
		<s:Panel id="MyPlayersInRoomPanel" skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelOnlineTitle')}"
				 width="423" height="303" left="10" top="10" controlBarVisible="true">
			<s:List id="MyPlayersInRoomList" width="100%" height="100%" skinClass="GameView.Skins.DefaultListSkin"
					dataProvider="{mRoomModel.PlayersInRoom}" itemRenderer="GameView.Friendly.RealtimePlayerItem" 
					change="MyPlayersInRoomList_changeHandler(event)"/>
			<s:controlBarContent>
				<s:Button label="{mRoomModel.RoomName}" minWidth="80" skinClass="GameView.Skins.ButtonDarkGreySkin" />
			</s:controlBarContent>
		</s:Panel>
		<s:Panel id="MyChallengesPanel" skinClass="GameView.Skins.DefaultPanelSkin" title="{resourceManager.getString('main','FriendlyPanelChallengesTitle')}"
				 width="423" height="157" left="10" top="323" controlBarVisible="false">
			<s:List id="MyChallengesList" width="100%" height="100%" skinClass="GameView.Skins.DefaultListSkin"
					dataProvider="{mRoomModel.ReceivedChallenges}" itemRenderer="GameView.Friendly.ChallengeItem" change="MyChallengesList_changeHandler(event)"/>
		</s:Panel>
		<Friendly:MatchDefinitionPanel id="MyMatchDefitionPanel" right="10" top="10" width="306" height="470" 
									   title="{resourceManager.getString('main','FriendlyPanelDefinitionTitle')}"/>		
	</s:Group>
	
</s:Group>