<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:GameView="GameView.*"
		 width="760" height="650"
		 addedToStage="Tutorial_addedToStageHandler(event)"
		 >
	
	<fx:Script><![CDATA[
		import GameModel.InactivityModel;
		import GameModel.MainGameModel;
		import GameModel.RealtimeModel;
		
		import GameView.Match.RealtimeMatch;
		
		import mx.binding.utils.BindingUtils;
		import mx.binding.utils.ChangeWatcher;
		import mx.events.EffectEvent;
		import mx.events.FlexEvent;
		
		protected function Tutorial_addedToStageHandler(event:Event):void
		{
			mMainGameModel = SoccerClient.GetMainGameModel();
			
			// Durante todo el tutorial nos aseguramos de que no entramos en inactividad
			mMainGameModel.TheInactivityModel.OperationMode = InactivityModel.FORCED_ACTIVITY_MODE; 
			
			mLFMChangeWatcher = BindingUtils.bindSetter(OnLookingForMatchChanged, mMainGameModel, [ "TheRealtimeModel", "LookingForMatch" ]);
			
			// Si no nos han inicializado todavia, asumimos BASIC
			if (mMode == null)
				mMode = BASIC;
			
			if (mMode == BASIC)
			{
				GameMetrics.ReportPageView(GameMetrics.VIEW_TUTORIAL_START);
				GameMetrics.ReportEvent(GameMetrics.TUTORIAL_START, null);
				MyBasicTutorialInitSequence.play();
			}
			else
			{
				//GameMetrics.ReportPageView(GameMetrics.VIEW_TUTORIAL_START);
				//GameMetrics.ReportEvent(GameMetrics.TUTORIAL_START, null);
				MyAdvancedTutorialInitSequence.play();
			}
		}
		
		public function SetAdvancedMode() : void
		{
			mMode = ADVANCED;
		}
				
		private function OnLookingForMatchChanged(looking : Boolean) : void
		{
			if (looking)
				CloseTutorial();
		}
		
		// Siempre hay que salir del tutorial por aqui!
		private function CloseTutorial() : void
		{
			if (mMode == BASIC)
				GameMetrics.ReportEvent(GameMetrics.TUTORIAL_CLOSED, { lookingForMatch: mMainGameModel.TheRealtimeModel.LookingForMatch });
			
			if (mLFMChangeWatcher != null)
				mLFMChangeWatcher.unwatch();
			
			(parent as Group).removeElement(this);
			
			mMainGameModel.TheInactivityModel.OperationMode = InactivityModel.NORMAL_MODE;
		}
		
		protected function InitTxtButtonNext_clickHandler():void
		{
			if (mMode == BASIC)
				GameMetrics.ReportEvent(GameMetrics.TUTORIAL_STEP1, null);
			MyInitTxt.visible = false;
			ShowTutorialStep(BASIC, 0);
		}
		
		protected function InitTxtButtonSkip_clickHandler():void
		{
			if (mMode == BASIC)
			{
				GameMetrics.ReportEvent(GameMetrics.TUTORIAL_SKIPPED, { step: currentState });
				GameMetrics.ReportEvent(GameMetrics.TUTORIAL_END, null);
			}
			MyInitTxt.visible = false;
			MyBasicTutorialEndSequence.play();
		}
		
		protected function NotNow_clickHandler():void
		{
			CloseTutorial();
		}
		
		protected function MenuButton_clickHandler(lesson:String):void
		{
			MyMenu.visible = false;
			if (lesson == "Basics")
				ShowTutorialStep(ADVANCED,0);
			else if (lesson == "Controlling")
				ShowTutorialStep(ADVANCED,3);
			else if (lesson == "Goalkeeper")
				ShowTutorialStep(ADVANCED,5);
			else if (lesson == "Shooting")
				ShowTutorialStep(ADVANCED,7);
		}
		
		protected function MenuCloseButton_clickHandler(event:MouseEvent):void
		{
			CloseTutorial();
		}
		
		protected function TutorialNextButton_clickHandler():void
		{
			var step:int;
			
			if (mMode == BASIC)
			{
				if (mStep == BASIC_SEQUENCE.length-1)
				{
					MyBasicTutorialEndSequence.play();
				}
				else
				{
					step = mStep+1
					ShowTutorialStep(mMode, step);
				}
			}
			else
			{
				if (mStep == ADVANCED_SEQUENCE.length-1)
					step = 0;
				else
					step = mStep+1
				ShowTutorialStep(mMode, step);
			}
		}
		
		protected function TutorialSkipButton_clickHandler():void
		{
			if (mMode == BASIC)
			{
				MyBasicTutorialEndSequence.play();
			}
			else
			{
				MyAdvancedTutorialOpenMenuSequence.play();
			}
		}
		
		// CONTROL DEL TUTORIAL
		
		private function ShowTutorialStep(mode:String, step:int):void
		{
			mMode = mode;
			mStep = step;
			
			var anim:String = (mMode == BASIC) ? BASIC_SEQUENCE[step].anim : ADVANCED_SEQUENCE[step].anim;
			var tit:String = (mMode == BASIC) ? BASIC_SEQUENCE[step].tit : ADVANCED_SEQUENCE[step].tit;
			var txt:String = (mMode == BASIC) ? BASIC_SEQUENCE[step].txt : ADVANCED_SEQUENCE[step].txt;
			
			MyAnim.source = resourceManager.getClass('main',anim);
			MyAnim.load();
			MyTit.text = resourceManager.getString('main',tit);
			MyTxt.text = resourceManager.getString('main',txt);
			
			MyOpenMessageSequence.play();
		}
		
		[Bindable]
		private var mMainGameModel : MainGameModel;
		private var mLFMChangeWatcher : ChangeWatcher = null;
		
		private var mStep : Number;
		private var mMode : String;
		private const BASIC:String = "Basic";
		private const ADVANCED:String = "Advanced";
		
		private const ADVANCED_SEQUENCE:Array = 
		[
			{tit : "TutorialBasicsStep1Tit", txt : "TutorialBasicsStep1Txt", anim : "TutorialBasicsStep1Anim"},
			{tit : "TutorialBasicsStep2Tit", txt : "TutorialBasicsStep2Txt", anim : "TutorialBasicsStep2Anim"},
			{tit : "TutorialBasicsStep3Tit", txt : "TutorialBasicsStep3Txt", anim : "TutorialBasicsStep3Anim"},
			{tit : "TutorialControllingStep1Tit", txt : "TutorialControllingStep1Txt", anim : "TutorialControllingStep1Anim"},
			{tit : "TutorialControllingStep2Tit", txt : "TutorialControllingStep2Txt", anim : "TutorialControllingStep2Anim"},
			{tit : "TutorialGoalkeeperStep1Tit", txt : "TutorialGoalkeeperStep1Txt", anim : "TutorialGoalkeeperStep1Anim"},
			{tit : "TutorialGoalkeeperStep2Tit", txt : "TutorialGoalkeeperStep2Txt", anim : "TutorialGoalkeeperStep2Anim"},
			{tit : "TutorialShotAtGoalStep1Tit", txt : "TutorialShotAtGoalStep1Txt", anim : "TutorialShotAtGoalStep1Anim"},
			{tit : "TutorialShotAtGoalStep2Tit", txt : "TutorialShotAtGoalStep2Txt", anim : "TutorialShotAtGoalStep2Anim"}
		];
		
		private const BASIC_SEQUENCE:Array = [{tit : "TutorialBasicsStep1Tit", txt : "TutorialBasicsStep1Txt", anim : "TutorialBasicsStep1Anim"},
			{tit : "TutorialBasicsStep2Tit", txt : "TutorialBasicsStep2Txt", anim : "TutorialBasicsStep2Anim"},
			{tit : "TutorialControllingStep1Tit", txt : "TutorialControllingStep1Txt", anim : "TutorialControllingStep1Anim"},
			{tit : "TutorialControllingStep2Tit", txt : "TutorialControllingStep2Txt", anim : "TutorialControllingStep2Anim"},
			{tit : "TutorialGoalkeeperStep1Tit", txt : "TutorialGoalkeeperStep1Txt", anim : "TutorialGoalkeeperStep1Anim"},
			{tit : "TutorialShotAtGoalStep1Tit", txt : "TutorialShotAtGoalStep1Txt", anim : "TutorialShotAtGoalStep1Anim"}];
		
	]]></fx:Script>
	
	<fx:Declarations>
		<s:Sequence id="MyBasicTutorialInitSequence">
			<s:Animate target="{MyBlackRectangle}" duration="250">
				<s:SimpleMotionPath property="alpha" valueTo="0" />
			</s:Animate>
			<s:SetAction target="{MyBlackRectangle}" property="visible" value="false"/>
			<s:Animate target="{MyInitTxt}" duration="250">
				<s:SimpleMotionPath property="top" valueTo="228" />
				<s:SimpleMotionPath property="alpha" valueTo="1" />
			</s:Animate>
		</s:Sequence>
		
		<s:Sequence id="MyBasicTutorialEndSequence">
			<s:SetAction target="{MyMessage}" property="visible" value="false" />
			<s:Parallel duration="250">
				<s:Fade target="{MyTutorialField}" alphaTo="0" />
				<s:Fade target="{MyAnim}" alphaTo="0" />
			</s:Parallel>
			<s:Parallel>
				<s:SetAction target="{MyTutorialField}" property="visible" value="false"/>
				<s:SetAction target="{MyAnim}" property="visible" value="false"/>
				<s:SetAction target="{EndCortina}" property="visible" value="true" />
				<s:SetAction target="{EndCortina}" property="alpha" value="0" />
				<s:SetAction target="{MyEndTxt}" property="visible" value="true" />
				<s:SetAction target="{MyEndTxt}" property="alpha" value="0" />
				<s:SetAction target="{MyEndTxt}" property="top" value="355" />
			</s:Parallel>
			<s:Animate target="{EndCortina}" duration="250">
				<s:SimpleMotionPath property="alpha" valueTo="1" />
			</s:Animate>
			<s:Animate target="{MyEndTxt}" duration="250">
				<s:SimpleMotionPath property="alpha" valueTo="1" />
				<s:SimpleMotionPath property="top" valueTo="355" />
			</s:Animate>
		</s:Sequence>
		
		<s:Sequence id="MyAdvancedTutorialInitSequence">
			<s:Parallel>
				<s:SetAction target="{MyMenu}" property="alpha" value="0" />
				<s:SetAction target="{MyMenu}" property="visible" value="true" />
			</s:Parallel>
			<s:Animate target="{MyBlackRectangle}" duration="250">
				<s:SimpleMotionPath property="alpha" valueTo="0" />
			</s:Animate>
			<s:SetAction target="{MyBlackRectangle}" property="visible" value="false"/>
			<s:Animate target="{MyMenu}" duration="250">
				<s:SimpleMotionPath property="alpha" valueTo="1" />
			</s:Animate>
		</s:Sequence>
		
		<s:Sequence id="MyAdvancedTutorialOpenMenuSequence">
			<s:Parallel>
				<s:SetAction target="{MyAnim}" property="visible" value="false" />
				<s:SetAction target="{MyMenu}" property="visible" value="true" />
			</s:Parallel>
			<s:Parallel duration="250">
				<s:Fade target="{MyMessage}" alphaTo="0" />
				<s:Fade target="{MyMenu}" alphaTo="1" />
			</s:Parallel>
		</s:Sequence>	

		<s:Sequence id="MyOpenMessageSequence">
			<s:Parallel>
				<s:SetAction target="{MyAnim}" property="visible" value="true" />
				<s:SetAction target="{MyMessage}" property="visible" value="true" />
				<s:SetAction target="{MyMessage}" property="top" value="20" />
				<s:SetAction target="{MyMessage}" property="alpha" value="0" />				
			</s:Parallel>
			<s:Animate target="{MyMessage}" duration="250">
				<s:SimpleMotionPath property="top" valueTo="10" />
				<s:SimpleMotionPath property="alpha" valueTo="1" />
			</s:Animate>
		</s:Sequence>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		.headerBox {
			font-family:MyFontHelveticaNeueLTBold;
			font-size:15pt;
			font-weight:bold;
			color:#FFFFFF;
		}
	</fx:Style>
	
	<fx:Declarations>
		<s:DropShadowFilter id="MyTextDropShadowFilter" angle="270" distance="1" blurX="1" blurY="1" color="0x444444" />
	</fx:Declarations>
	
	<!-- FONDOS -->
	
	<s:SWFLoader top="80" id="MyTutorialField" source="@Embed(source='/Assets/General.swf', symbol='TutorialField')" />
	<s:SWFLoader id="MyAnim" y="80" source="{resourceManager.getClass('main','TutorialBasicsStep1Anim')}" visible="false" />
	<s:SWFLoader id="EndCortina" source="@Embed(source='/Assets/General.swf', symbol='TutorialCortinaPlay')" visible="false" alpha="0" />
	<s:Rect id="MyBlackRectangle" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="#000000"/>
		</s:fill>
	</s:Rect>
	
	<!-- MENSAJES -->
	
	<s:Group id="MyMessage" horizontalCenter="0" top="10" visible="false">
		<s:Group width="600" bottom="8">
			<GameView:PopupBackground left="-10" right="-10" top="-10" bottom="-10" />
			<s:Group width="415" right="10">
				<s:layout>
					<s:VerticalLayout gap="10" horizontalAlign="center" />
				</s:layout>
				<s:Label id="MyTit" text="" width="415" styleName="yellowBoldVeryBig" textAlign="center" />
				<s:Label id="MyTxt" text="" width="415" styleName="whiteBoldBig" textAlign="left" />
				<s:Group>
					<s:layout>
						<s:HorizontalLayout gap="10" verticalAlign="middle" />
					</s:layout>
					<s:Button label="{resourceManager.getString('main','TutorialSkip')}" minWidth="80" horizontalCenter="0" verticalCenter="0" skinClass="GameView.Skins.ButtonDarkGreySkin" click="TutorialSkipButton_clickHandler()" />
					<s:Button label="{resourceManager.getString('main','TutorialNext')}" minWidth="80" horizontalCenter="0" verticalCenter="0" skinClass="GameView.Skins.ButtonGreySkin" click="TutorialNextButton_clickHandler()" />
				</s:Group>
			</s:Group>
			<s:filters>
				<s:DropShadowFilter angle="90" distance="0" blurX="20" blurY="20" strength="2" color="0x000000" alpha="0.5" />
			</s:filters>
		</s:Group>	
		<s:BitmapImage left="-10" source="@Embed(source='/Assets/General.swf', symbol='TutorialHost')" fillMode="clip" />
	</s:Group>
	
	<!-- MENSAJES INICIAL Y FINAL -->
	
	<s:Group id="MyInitTxt" horizontalCenter="0" top="238" visible="true" alpha="0" >
		<s:Group width="600" bottom="8">
			<GameView:PopupBackground left="-10" right="-10" top="-10" bottom="-10" />
			<s:Group width="415" right="10">
				<s:layout>
					<s:VerticalLayout gap="10" horizontalAlign="center" />
				</s:layout>
				<s:Label text="{resourceManager.getString('main','TutorialInitTit')}" width="415" styleName="yellowBoldHuge" textAlign="center" />
				<s:Label text="{resourceManager.getString('main','TutorialInitTxt')}" width="415" styleName="whiteBoldVeryBig" textAlign="center" />
				<s:Group>
					<s:layout>
						<s:HorizontalLayout gap="10" verticalAlign="middle" />
					</s:layout>
					<s:Button label="{resourceManager.getString('main','TutorialSkip')}" minWidth="80" horizontalCenter="0" verticalCenter="0" skinClass="GameView.Skins.ButtonDarkGreySkin" click="InitTxtButtonSkip_clickHandler()" />
					<s:Button label="{resourceManager.getString('main','TutorialNext')}" minWidth="80" horizontalCenter="0" verticalCenter="0" skinClass="GameView.Skins.ButtonGreySkin" click="InitTxtButtonNext_clickHandler()" />
				</s:Group>
			</s:Group>
			<s:filters>
				<s:DropShadowFilter angle="90" distance="0" blurX="20" blurY="20" strength="2" color="0x000000" alpha="0.5" />
			</s:filters>
		</s:Group>	
		<s:BitmapImage left="-10" source="@Embed(source='/Assets/General.swf', symbol='TutorialHost')" fillMode="clip" />
	</s:Group>
	
	<s:Group id="MyEndTxt" horizontalCenter="0" top="345" visible="false" >
		<s:Group width="600" bottom="8">
			<GameView:PopupBackground left="-10" right="-10" top="-10" bottom="-10" />
			<s:Group width="415" right="10">
				<s:layout>
					<s:VerticalLayout gap="10" horizontalAlign="center" />
				</s:layout>
				<s:Label text="{resourceManager.getString('main','TutorialEndTit')}" width="415" styleName="yellowBoldHuge" textAlign="center" />
				<s:Label text="{resourceManager.getString('main','TutorialEndTxt')}" width="415" styleName="whiteBoldVeryBig" textAlign="center" />
				<s:Button label="{resourceManager.getString('main','TutorialNotNow')}" minWidth="80" horizontalCenter="0" verticalCenter="0" skinClass="GameView.Skins.ButtonDarkGreySkin" click="NotNow_clickHandler()" />
			</s:Group>
			<s:filters>
				<s:DropShadowFilter angle="90" distance="0" blurX="20" blurY="20" strength="2" color="0x000000" alpha="0.5" />
			</s:filters>
		</s:Group>	
		<s:BitmapImage left="-10" source="@Embed(source='/Assets/General.swf', symbol='TutorialHost')" fillMode="clip" />
	</s:Group>
	
	<!-- MENU -->
	
	<s:Group id="MyMenu" horizontalCenter="0" verticalCenter="0" visible="false">
		<GameView:PopupBackground left="-15" right="-15" bottom="-15" top="-25" />
		
		<s:Group>
			<s:layout>
				<s:VerticalLayout gap="20" horizontalAlign="center" />
			</s:layout>
			<s:Group>
				<s:layout>
					<s:VerticalLayout gap="0" />
				</s:layout>
				<s:Group id="MyMenuCabecera">
					<s:layout>
						<s:HorizontalLayout gap="20" verticalAlign="middle" />
					</s:layout>
					<s:BitmapImage id="MyHost" source="@Embed(source='/Assets/General.swf', symbol='MessageTutorialHost')" fillMode="clip" />
					<s:Label id="myTit" top="15" text="{resourceManager.getString('main','TutorialMenuLessons')}" styleName="whiteBoldHuge" />
				</s:Group>
				<s:Graphic>
					<s:Line xFrom="0" xTo="{MyMenuCabecera.width}" yFrom="0" yTo="0">
						<s:stroke>
							<s:SolidColorStroke color="0xFFFFFF" weight="1"/>
						</s:stroke>
					</s:Line>
				</s:Graphic>
			</s:Group>
			<s:Group>
				<s:layout>
					<s:VerticalLayout gap="10" />
				</s:layout>
				<s:Button label="{resourceManager.getString('main','TutorialMenuBasic')}" width="100%" height="25" skinClass="GameView.Skins.ButtonGreySkin" click="MenuButton_clickHandler('Basics')" />
				<s:Button label="{resourceManager.getString('main','TutorialMenuControlling')}" width="100%" height="25" skinClass="GameView.Skins.ButtonGreySkin" click="MenuButton_clickHandler('Controlling')" />
				<s:Button label="{resourceManager.getString('main','TutorialMenuGoalkeeper')}" width="100%" height="25" skinClass="GameView.Skins.ButtonGreySkin" click="MenuButton_clickHandler('Goalkeeper')" />
				<s:Button label="{resourceManager.getString('main','TutorialMenuShooting')}" width="100%" height="25" skinClass="GameView.Skins.ButtonGreySkin" click="MenuButton_clickHandler('Shooting')" />
				<s:Button label="{resourceManager.getString('main','TutorialClose')}" width="100%" height="25" skinClass="GameView.Skins.ButtonDarkGreySkin" click="MenuCloseButton_clickHandler(event)" />
			</s:Group>
		</s:Group>
		<s:Button label="X" minHeight="23" minWidth="23" top="-20" right="-10" skinClass="GameView.Skins.ButtonGreySkin" click="MenuCloseButton_clickHandler(event)" />
	</s:Group>
	
</s:Group>

