<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:GameView="GameView.*"
		 width="640" height="100%"
		 creationComplete="CreationCompleteHandler(event)"
		 >
	
	<fx:Script><![CDATA[
		import GameModel.LoginModel;
		import GameModel.MainGameModel;
		
		import HttpService.enum.VALID_NAME;
		
		import mx.binding.utils.BindingUtils;
		import mx.core.FlexGlobals;
		import mx.core.IFlexModule;
		import mx.events.FlexEvent;
		import mx.managers.PopUpManager;
		
		import spark.events.TextOperationEvent;
		
		public static function Show() : void
		{
			var dlg : ChangeNameDialog = new ChangeNameDialog();
			var parent : Sprite = FlexGlobals.topLevelApplication as Sprite;
			
			dlg.moduleFactory = IFlexModule(parent).moduleFactory;
			
			PopUpManager.addPopUp(dlg, parent, true, null);
			PopUpManager.centerPopUp(dlg);
		}
		
		protected function CreationCompleteHandler(event:FlexEvent):void
		{
			mMainGameModel = SoccerClient.GetMainGameModel();
			mLoginModel = mMainGameModel.TheLoginModel; 
			
			BindingUtils.bindSetter(OnIsValidTeamNameLastResult, mLoginModel, ["IsValidTeamNameLastResult"]);
		}

		private function OnIsValidTeamNameLastResult(validity : String) : void
		{
			mWaitingForNameChange = false;			
			
			if (validity == VALID_NAME.VALID)
				SetNameValidity(true, resourceManager.getString('main','LoginNameAvailable'));
			else if (validity == VALID_NAME.EMPTY)
				SetNameValidity(false, resourceManager.getString('main','LoginEnterName'));	
			else if (validity == VALID_NAME.DUPLICATED)
				SetNameValidity(false, resourceManager.getString('main','LoginNotAvailable'));	
			else if (validity == VALID_NAME.INAPPROPIATE)
				SetNameValidity(false, resourceManager.getString('main','LoginInappropriateName'));
			else if (validity == VALID_NAME.TOO_SHORT)
				SetNameValidity(false, resourceManager.getString('main','LoginNameTooShort'));
			else if (validity == VALID_NAME.WHITE_SPACE_TRIM)
				SetNameValidity(false, resourceManager.getString('main','LoginNameBlank'));
			else if (validity == VALID_NAME.TOO_MANY_WHITESPACES)
				SetNameValidity(false, resourceManager.getString('main','LoginNameBlankSpaces'));
			else
				SetNameValidity(false, resourceManager.getString('main','LoginInvalidName'));
		}
		
		private function SetNameValidity(valid : Boolean, text : String) : void
		{
			MyValidityLabel.text = text;
			mNameValidity = valid;
			
			if (valid)
				MyValidityLabel.setStyle("color", "#0DBF00");
			else
				MyValidityLabel.setStyle("color", "#E26261");
		}
		
		protected function MyTeamNameInput_changeHandler(event:TextOperationEvent):void
		{				
			mLoginModel.IsValidTeamName(MyTeamNameInput.text);
		}
		
		protected function MyButtonNext_clickHandler(event:MouseEvent):void
		{
			mWaitingForNameChange = true;
			
			mLoginModel.ChangeName(MyTeamNameInput.text, OnChangeNameSuccess);
		}
		
		private function OnChangeNameSuccess() : void
		{
			mWaitingForNameChange = false;
			
			PopUpManager.removePopUp(this);
		}
		
		[Bindable] private var mMainGameModel : MainGameModel;
		[Bindable] private var mLoginModel : LoginModel;
		
		[Bindable] private var mNameValidity : Boolean = false;
		[Bindable] private var mWaitingForNameChange : Boolean = false;
	
	]]></fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="MyTextDropShadowFilter" angle="270" blurX="1" blurY="1"
							color="0x444444" distance="1"/>
	</fx:Declarations>
		
	<GameView:PopupBackground left="-10" right="-10" top="-10" bottom="-10" />
	<s:BitmapImage left="-10" bottom="-8" source="@Embed(source='/Assets/General.swf', symbol='TutorialHost')" fillMode="clip" />
	
	<s:Group right="10">
		<s:layout>
			<s:VerticalLayout gap="6" horizontalAlign="center"/>
		</s:layout>
		<s:Label id="myStep2Label" x="10" y="0" width="470" height="27"
				 filters="{MyTextDropShadowFilter}" maxDisplayedLines="1"
				 styleName="yellowBoldVeryBig"
				 text="{resourceManager.getString('main','Login02EnterName')}"
				 textAlign="center" verticalAlign="middle"></s:Label>
		<s:Label id="myStep2Txt" x="10" y="35" width="470" styleName="whiteBoldBig"
				 text="{resourceManager.getString('main','Login02EnterNameTxt')}"
				 textAlign="center" verticalAlign="middle"></s:Label>
		<s:TextInput id="MyTeamNameInput" x="82" y="97" width="200"
					 change="MyTeamNameInput_changeHandler(event)" maxChars="30"
					 styleName="blackBoldMediumHN" prompt=""/>
		<s:Label id="MyValidityLabel" x="32" y="126" width="470" height="40" color="#0DBF00"
				 styleName="whiteBoldBig" textAlign="center"/>
		<s:Button id="MyButtonNext" x="98" top="4" width="160" height="24"
				  label="{resourceManager.getString('main','Continue')}"
				  click="MyButtonNext_clickHandler(event)" enabled="{mNameValidity}"
				  skinClass="GameView.Skins.ButtonGreySkin"/>
	</s:Group>
	
</s:Group>
