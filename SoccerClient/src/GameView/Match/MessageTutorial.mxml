<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="340" height="84" >
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.core.IFlexModule;
			import mx.events.EffectEvent;
			import mx.managers.PopUpManager;
			
			import utils.Delegate;
			import utils.MovieClipListener;
			
			public static function Show(text : String) : void
			{
				var theDialog : MessageTutorial = new MessageTutorial();
				var parent : Sprite = FlexGlobals.topLevelApplication as Sprite;
				
				theDialog.Msg = text;
				
				theDialog.moduleFactory = IFlexModule(parent).moduleFactory;
				
				PopUpManager.addPopUp(theDialog, parent, false, null);
				PopUpManager.centerPopUp(theDialog);
				
				theDialog.ShowBg();
			}
			
			private function Refresh():void
			{
				if (MyBg.content != null)
				{
					var mc : MovieClip = MyBg.content as MovieClip;
					utils.MovieClipListener.AddFrameScript(mc, "showEnd", Delegate.create(OnEndShowBg, mc, null));
					utils.MovieClipListener.AddFrameScript(mc, "hideEnd", Delegate.create(OnEndHideBg, mc, null));
					MyBg.visible = true;
				}
			}
			
			protected function MySequence_effectEndHandler(event:EffectEvent):void
			{
				HideBg();
			}
			
			private function ShowBg() : void
			{
				var mc : MovieClip = MyBg.content as MovieClip;
				mc.gotoAndPlay("show");
				
			}
			
			private function HideBg() : void
			{
				myMsg.visible = false;
				var mc : MovieClip = MyBg.content as MovieClip;
				mc.gotoAndPlay("hide");
			}
			
			private function OnEndShowBg(mc:MovieClip, callback:Function) : void
			{
				try
				{
					mc.stop();
					myMsg.visible = true;
					MySequence.play();
				}
				catch(e:Error)
				{
					ErrorMessages.LogToServer("WTF 6655");
				}
			}

			private function OnEndHideBg(mc:MovieClip, callback:Function) : void
			{
				try
				{
					mc.stop();
					PopUpManager.removePopUp(this);	
				}
				catch(e:Error)
				{
					ErrorMessages.LogToServer("WTF 6655");
				}
			}
			
			[Bindable]
			public function get Msg() : String { return mMsg; }
			public function set Msg(msg : String) : void { mMsg = msg; }
			
			private var mMsg : String = null;
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Sequence id="MySequence" effectEnd="MySequence_effectEndHandler(event)">
			<s:Parallel>
				<s:Move target="{myMsg}" xFrom="104" xTo="94" duration="150" />
				<s:Fade target="{myMsg}" alphaFrom="0" alphaTo="1" duration="150" />
			</s:Parallel>
			<s:Fade target="{myMsg}" alphaFrom="1" alphaTo="1" duration="1750" />
			<s:Fade target="{myMsg}" alphaFrom="1" alphaTo="0" duration="250" />
		</s:Sequence>	
	</fx:Declarations>

	<s:SWFLoader id="MyBg" source="@Embed(source='/Assets/General.swf', symbol='MessageTutorialBg')" creationComplete="Refresh()" visible="false"/>
	
	<s:Label id="myMsg"
			 x="114" y="28"
			 alpha="0"
			 width="235" height="50"
			 textAlign="left"
			 verticalAlign="middle"
			 styleName="whiteBoldBig"
			 text="{Msg}"/>
	
</s:Group>

