<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="760" height="169"
		 cacheAsBitmap="true" mouseChildren="false" mouseEnabled="false"
		 addedToStage="AddedToStageHandler(event)"
		 x="0" verticalCenter="0"
		 >
	
	<fx:Style source="../styles.css" />

	<fx:Script><![CDATA[
		import Match.Time;
		
		import com.greensock.TweenLite;
		import com.greensock.easing.Elastic;
		import com.greensock.easing.Strong;
		
		import mx.collections.ArrayCollection;
		import mx.core.FlexGlobals;
		import mx.core.IFlexModule;
		import mx.effects.Tween;
		import mx.events.EffectEvent;
		import mx.events.FlexEvent;
		import mx.managers.PopUpManager;
		import mx.resources.ResourceManager;
		
		import org.osmf.events.TimeEvent;
		
		import spark.components.Label;
		import spark.effects.animation.MotionPath;
		
		
		public function Init(msg : String, callback : Function) : void
		{
			var posX : Number;
			
			mMsg = msg;
			mCallback = callback;
			visibleTime = 0;
			_letters = [];
			
			// separamos el mensaje en labels individuales y configuramos su animaciÃ³n
			for (var a:int = 0, x:int = 0; a < mMsg.length; a++)
			{
				// Configuramos el label temporal que mostrara ua letra del mensaje
				var tmpLabel:Label 		= new Label();
				var txt : String = mMsg.charAt(a);
				tmpLabel.determineTextFormatFromStyles().antiAliasType = "advanced";
				tmpLabel.determineTextFormatFromStyles().gridFitType = "none";
				tmpLabel.styleName 		= "whiteBoldLed";
				tmpLabel.text 			= txt;
				tmpLabel.verticalCenter = 0;		
				tmpLabel.regenerateStyleCache(true);
				tmpLabel.x = ((LedBanner.width - measureString(mMsg).width) * 0.5 ) + measureString(mMsg.substr(0,a)).width;
				tmpLabel.filters		= [glowNormal];
				//$txt.x = $a * $txt.measureText(mMsg.charAt($a)).width;				
				_letters.push(tmpLabel);

				LedBanner.addElement(_letters[a]);
			}
			
			addEventListener(Event.ENTER_FRAME, AnimateWavingText, false, 0, true);
		}
		
		protected function measureString(str:String):Rectangle {
			var textField:TextField = new TextField();
			var format:TextFormat = new TextFormat();
			format.font = "MyFontHelveticaNeue97Bold";
			format.size = 90;
			format.bold = true;
			format.color = 0xFFFFFF;
			
			textField.defaultTextFormat = format;
			textField.text = str;
			
			return new Rectangle(0, 0, textField.textWidth, textField.textHeight);
		}
		
		protected function AddedToStageHandler(event:Event):void
		{
			MySequence.play();
		}		
		
		protected function MySequence_effectEndHandler(evt:EffectEvent):void
		{
			(parent as Group).removeElement(this);
			
			if (mCallback != null)
				mCallback();
		}
		
		protected function AnimateWavingText(evt:Event):void
		{
			if(visibleTime < 2000)
			{
				for (var $a:int = 0; $a<_letters.length; $a++) 
				{
					_letters[$a].verticalCenter = Math.sin(_angle+$a)*_radius;
				}
				
				_angle += _speed;
				visibleTime++;
			}
		}
		
		protected function SetEndEffectIfNeeded(ev:Event):void
		{
			if( mMsg == ResourceManager.getInstance().getString("matchmsgs", "MensajeGol") )
			{
				AnimateWavingText(new Event(Event.ENTER_FRAME));
				LedBanner.visible = true;
				myMsg.text = "";
			}
		}	
		
		
		private var mCallback : Function;
				
		[Bindable] private var mMsg : String;
				   private var _radius : int = 5;
				   private var _speed : Number = Math.PI/15;
				   private var _angle : Number = 0;
				   private var _letters : Array;
				   private var visibleTime : int;
		
	]]></fx:Script>
	
	<fx:Declarations>
		<s:GlowFilter id="glowNormal" strength="2" alpha="0.7" blurX="12" blurY="12" color="#FFFFFF" quality="3"/>

		<s:Sequence id="MySequence" effectEnd="MySequence_effectEndHandler(event)"> 
			<s:Animate target="{MyEllipse}" duration="200">
				<s:SimpleMotionPath property="alpha" valueTo="0.8" />
				<s:SimpleMotionPath property="width" valueTo="50" />
				<s:SimpleMotionPath property="height" valueTo="50" />
			</s:Animate>
			<s:Parallel duration="200">
				<s:Animate target="{MyEllipse}">
					<s:SimpleMotionPath property="alpha" valueTo="0" />
					<s:SimpleMotionPath property="width" valueTo="760" />
				</s:Animate>
				<s:Animate target="{MyRectangle}">
					<s:SimpleMotionPath property="width" valueTo="760" />
					<s:SimpleMotionPath property="alpha" valueTo="1" />
				</s:Animate>
			</s:Parallel>
			<s:Parallel duration="200">
				<s:Fade target="{MyBg}" alphaTo="1" />
				<s:Animate target="{bgMask}" >
					<s:SimpleMotionPath property="height" valueTo="169" />
				</s:Animate>
				<s:Fade target="{MyRectangle}" alphaTo="0" />
			</s:Parallel>
			<s:Parallel duration="200" effectStart="{SetEndEffectIfNeeded(event)}" >				
				<s:Fade target="{myMsg}" alphaTo="1" />
				<s:Scale target="{myMsg}" scaleXFrom="1.4" scaleXTo="1" scaleYFrom="1.4" scaleYTo="1" >
				<s:easer>
				<s:Elastic/>
				</s:easer>
				</s:Scale>
			</s:Parallel>
			<s:Fade target="{MyMask}" alphaTo="0.8" duration="0" />
			<s:Fade target="{this}" alphaFrom="1" alphaTo="1" duration="2000"/>
			<s:Fade target="{this}" alphaFrom="1" alphaTo="0" duration="250"/>
		</s:Sequence>			
	</fx:Declarations>
	
	<s:BitmapImage id="MyBg" source="@Embed(source='/Assets/General.swf', symbol='MessageLedBg')" fillMode="clip" mask="{bgMask}" alpha="0" />
	<s:Group width="760" height="40" horizontalCenter="0" verticalCenter="0" id="bgMask">
		<s:Rect id="bgMaskRect" left="0" top="0" right="0" bottom="0">
			<s:fill>
				<s:SolidColor />
			</s:fill>
		</s:Rect>
	</s:Group>
	<s:Rect id="MyRectangle" width="0" height="40" verticalCenter="0" horizontalCenter="0" alpha="0">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#00FFFF" joints="miter" miterLimit="4" weight="2"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor color="#00FFFF" alpha="0.24"/>
		</s:fill>
	</s:Rect>
	<s:Ellipse id="MyEllipse" width="30" height="30" alpha="0" horizontalCenter="0" verticalCenter="0">
		<s:fill>
			<s:SolidColor color="#B5EEF7"/>
		</s:fill>
		<s:filters>
			<s:GlowFilter alpha="1" blurX="80" blurY="80" color="#B5EEF7" inner="false" knockout="false" quality="2" strength="4"/>
			<s:BlurFilter blurX="8" blurY="8" quality="2"/>
		</s:filters>
	</s:Ellipse>
	<s:Label id="myMsg"
			 alpha="0"
			 maxWidth="760"
			 textAlign="center"
			 verticalAlign="middle"
			 horizontalCenter="0" verticalCenter="0"
			 styleName="whiteBoldLed"
			 filters="{glowNormal}"
			 text="{mMsg}">
	</s:Label>
	<s:Group id="LedBanner" width="760" maxWidth="760" horizontalCenter="0" textAlign="center" verticalCenter="0" visible="false"/>
	<s:BitmapImage id="MyMask" source="@Embed(source='/Assets/General.swf', symbol='MessageLedMaskLeds')" fillMode="clip" x="0" y="15" alpha="0" />
	
</s:Group>
