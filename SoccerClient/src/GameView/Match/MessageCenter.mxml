<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%"
		 creationComplete="CreationCompleteHandler(event)"
		 >

	<fx:Script><![CDATA[
		import Match.Cap;
		import Match.Conflict;
		import Match.Enums;
		import Match.Fault;
		import Match.Field;
		
		import mx.core.UIComponent;
		import mx.events.FlexEvent;
		import mx.resources.ResourceManager;
		
		protected function CreationCompleteHandler(event:FlexEvent):void
		{
			/* Las "usamos" aqui para que linke */
			new MessageTicker();
			new MessageSpecial();
			new MessageLed();
			new MessageTutorial();
			new MessageMovieClip();
		}
		
		public function ShowAutoGoalkeeper(auto : Boolean) : void
		{
			if (auto)
				AddMessage(TutorialClass, ResourceManager.getInstance().getString("matchmsgs", "MessagePorteroAutomatico"));
			else
				AddMessage(TutorialClass, ResourceManager.getInstance().getString("matchmsgs", "MessagePorteroManual"));
		}
		
		public function ShowFinishPart(part:int, callback:Function) : void
		{						
			if (part == 1)
				AddMessage(LedClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeFinTiempo1"), callback); 
			else if (part == 2)
				AddMessage(LedClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeFinPartido"), callback);
			else
				throw new Error("Unknown part");
		}
		
		public function ShowMensajeSkill(idSkill:int) : void
		{
			AddMessage(SpecialClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeSkill" + idSkill), ResourceManager.getInstance().getClass("matchmsgs", "MensajeSkill" + idSkill + "Icon"));
		}
		
		public function ShowGoalScored(validity:int, callback:Function) : void
		{						
			if (validity == Enums.GoalValid)
				AddMessage(LedClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeGol"), callback);
			else if (validity == Enums.GoalInvalidNoDeclarado)
				AddMessage(LedClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeGolInvalido"), callback); // No declarado
			else if (validity == Enums.GoalInvalidPropioCampo)
				AddMessage(LedClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeGolInvalido"), callback); // Propio campo
			else
				throw new Error("Validez del gol desconocida");
		}
		
		public function ShowAreaPortero(side : int, callback : Function) : void
		{
			if (side == Enums.Left_Side)
				AddMessage(MovieClipClass, ResourceManager.getInstance().getClass("match", "AreaPortero"), Field.SmallAreaLeft.x, Field.SmallAreaLeft.y, callback);
			else
				AddMessage(MovieClipClass, ResourceManager.getInstance().getClass("match", "AreaPortero"), Field.SmallAreaRight.x, Field.SmallAreaRight.y, callback);
			
			AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeControlPortero"));
		}
		
		public function ShowConflictOverCaps(conflict:Conflict) : void
		{
			var winner : Cap = conflict.Stolen? conflict.DefenderCap : conflict.AttackerCap;
			var loser : Cap = conflict.Stolen? conflict.AttackerCap : conflict.DefenderCap;
			var paramWinner : Number = conflict.Stolen? conflict.Defense : conflict.Control;
			var paramLoser : Number = conflict.Stolen? conflict.Control : conflict.Defense;
			var paramWinnerTit : String = conflict.Stolen? ResourceManager.getInstance().getString("main", "MatchDefinitionDefense") : 
														   ResourceManager.getInstance().getString("main", "MatchDefinitionControl");
			var paramLoserTit : String = conflict.Stolen? ResourceManager.getInstance().getString("main", "MatchDefinitionControl") : 
														  ResourceManager.getInstance().getString("main", "MatchDefinitionDefense");
			
			var mcWinnerMsg : MessageMovieClip = AddMessage(MovieClipClass, ResourceManager.getInstance().getClass("match", "ConflictoGana"), 
															winner.Visual.x, winner.Visual.y, null) as MessageMovieClip;
			var mcWinner : MovieClip = mcWinnerMsg.TheMovieClip;
			mcWinner.ConflictoNum.Num.text = paramWinner.toString();
			mcWinner.ConflictoNum.Tit.text = paramWinnerTit;

			var mcLoserMsg : MessageMovieClip = AddMessage(MovieClipClass, ResourceManager.getInstance().getClass("match", "ConflictoPierde"), 
														   loser.Visual.x, loser.Visual.y, null) as MessageMovieClip;
			var mcLoser : MovieClip = mcLoserMsg.TheMovieClip;
			mcLoser.ConflictoNum.Num.text = paramLoser.toString();
			mcLoser.ConflictoNum.Tit.text = paramLoserTit;
		}

		public function ShowRemainingShots(turnos:int) : void
		{
			if (turnos == 3)
				AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "QuedanTiros3"));
			else if (turnos == 2)
				AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "QuedanTiros2"));
			else if (turnos == 1)
				AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "QuedanTiros1"));
		}
		
		public function ShowTurn(reason:int, isMyTurn:Boolean, fault:Fault) : void
		{
			if (isMyTurn)
			{
				if (reason == Enums.TurnLost || reason == Enums.TurnStolen)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTurnoPropioRobo"));
				else if(reason == Enums.TurnSaquePuertaInvalidGoal)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTurnoPropioSaquePuerta"));
				else if (reason == Enums.TurnTiroAPuerta)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTiroPuertaRecepcion"));
				else if (reason == Enums.TurnGoalKeeperSet)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTiroPuertaConfirmacion"));
				else if(reason == Enums.TurnFault || reason == Enums.TurnSaquePuertaFalta)
					ShowFault(fault);
			}
			else
			{
				if (reason == Enums.TurnLost || reason == Enums.TurnStolen)	
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTurnoContrarioRobo"));
				else if (reason == Enums.TurnTiroAPuerta)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTiroPuertaAnuncio"));
				else if (reason == Enums.TurnGoalKeeperSet)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeTiroPuertaRecepcion2"));
				else if (reason == Enums.TurnFault || reason == Enums.TurnSaquePuertaFalta)
					ShowFault(fault);
			}
		}
		
		private function ShowFault(fault : Fault) : void
		{
			if (fault.YellowCard && fault.RedCard)
				AddMessage(SpecialClass, ResourceManager.getInstance().getString("matchmsgs", "FaltaTarjetaDobleAmarilla"),
										 ResourceManager.getInstance().getClass("matchmsgs", "FaltaTarjetaDobleAmarillaIcon")); // Doble Amarilla
			else if (fault.RedCard)
				AddMessage(SpecialClass, ResourceManager.getInstance().getString("matchmsgs", "FaltaTarjetaRoja"),
										 ResourceManager.getInstance().getClass("matchmsgs", "FaltaTarjetaRojaIcon")); // Roja
			else if (fault.YellowCard)
				AddMessage(SpecialClass, ResourceManager.getInstance().getString("matchmsgs", "FaltaTarjetaAmarilla"),
										 ResourceManager.getInstance().getClass("matchmsgs", "FaltaTarjetaAmarillaIcon")); // Amarilla
			else
				AddMessage(SpecialClass, ResourceManager.getInstance().getString("matchmsgs", "Falta"),
										 ResourceManager.getInstance().getClass("matchmsgs", "MessageSpecialWhistle"));
		}
		
		// Se ha producido un pase al pie. Pudo haber conflicto o no, pero se resolvio sin producirse el robo.
		public function ShowMsgPasePie(bUltimoPase:Boolean, conflicto:Conflict) : void
		{
			if (conflicto != null)
			{
				if (!bUltimoPase)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajePaseAlPieNoRobo"));
				else
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeUltimoPaseAlPieNoRobo"));
			}
			else
			{
				if (!bUltimoPase)
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajePaseAlPie"));
				else
					AddMessage(TickerClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeUltimoPaseAlPie"));
			}
		}
		
		public function ShowMsgGoalkeeperOutside() : void
		{
			AddMessage(TutorialClass, ResourceManager.getInstance().getString("matchmsgs", "MensajeGoalkeeperOutside"));
		}
		
		public function AddMessage(messageClass:Class, ...args) : UIComponent
		{
			var newMsg : UIComponent = new messageClass() as UIComponent;
			(newMsg as Object).Init.apply(newMsg, args);

			// We add our child, it takes care of removing itself
			addElement(newMsg);
			
			return newMsg;
		}
				
		private const TutorialClass : Class = getDefinitionByName("GameView.Match.MessageTutorial") as Class; 
		private const TickerClass : Class = getDefinitionByName("GameView.Match.MessageTicker") as Class;
		private const SpecialClass : Class = getDefinitionByName("GameView.Match.MessageSpecial") as Class;
		private const LedClass : Class = getDefinitionByName("GameView.Match.MessageLed") as Class;
		private const MovieClipClass : Class = getDefinitionByName("GameView.Match.MessageMovieClip") as Class;

	]]></fx:Script>
	
</s:Group>