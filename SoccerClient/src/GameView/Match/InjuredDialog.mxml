<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:Team="GameView.Team.*" xmlns:GameView="GameView.*"
		 width="480" height="285">
	
	<fx:Style source="../styles.css"/>
	
	<fx:Script>
		<![CDATA[
			import GameModel.MatchResultUtils;
			import GameModel.TeamModel;
			
			import GameView.AnimatableDialog;
			import GameView.FriendSelection.FriendSelector;
			
			import mx.collections.ArrayCollection;
			
			public static function Show(matchResult : Object) : void
			{
				var dialog : InjuredDialog = AnimatableDialog.Show(getDefinitionByName("GameView.Match::InjuredDialog") as Class) as InjuredDialog;
				
				var teamModel : TeamModel = SoccerClient.GetMainGameModel().TheTeamModel; 
				var myResult : Object = MatchResultUtils.GetMyResult(matchResult,teamModel);
				
				var injured : ArrayCollection = myResult.InjuredSoccerPlayers;
				
				for each(var soccerPlayerID : int in injured)
				{
					dialog.mInjured.addItem(teamModel.GetSoccerPlayerByID(soccerPlayerID));					
				}
			}
			
			protected function CloseClickHandler(event:MouseEvent):void
			{
				AnimatableDialog.Dismiss(this, null);
			}
			
			protected function SignUpClickHandler(event:MouseEvent):void
			{
				AnimatableDialog.Dismiss(this, null);
				FriendSelector.Show();
			}
			
			[Bindable] private var mInjured : ArrayCollection = new ArrayCollection();
		]]>
	</fx:Script>
	
	<GameView:PopupBackground width="100%" height="100%" />
	<s:BitmapImage x="2" y="2" source="@Embed(source='/Assets/General.swf', symbol='InjuredDialogHeader')" fillMode="clip" />
	
	<s:Group horizontalCenter="0" y="20">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
		<s:Label width="400" text="{resourceManager.getString('main','InjuredDialogTitle')}" styleName="whiteBoldHuge" textAlign="center"/>
		<s:Label width="400" text="{resourceManager.getString('main','InjuredDialogTxt')}" styleName="whiteBoldMedium" textAlign="center"/>
	</s:Group>
	
	<s:Rect top="92" width="90" height="90" radiusX="4" horizontalCenter="0">
		<s:stroke>
			<s:SolidColorStroke caps="none" color="#CCCCCC" joints="miter" miterLimit="4"
								weight="2"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor color="#DDD9D9"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter alpha="0.5" angle="90" blurX="40" blurY="40" color="#000000"
								distance="0" hideObject="false" inner="true" knockout="false"
								quality="2" strength="1.1"/>
		</s:filters>
	</s:Rect>
	
	<s:List id="MyInjuredList" dataProvider="{mInjured}" top="102" width="82" height="85" horizontalCenter="0"
			itemRenderer="GameView.Team.FieldCap" useVirtualLayout="false"
			skinClass="GameView.Skins.DefaultListSkin"			
			creationComplete="MyInjuredList.scroller.setStyle('horizontalScrollPolicy', mx.core.ScrollPolicy.AUTO);">
		<s:layout><s:HorizontalLayout gap="20" /></s:layout>
	</s:List>
	
	<s:Label width="400" text="{resourceManager.getString('main','InjuredSignUpTxt')}" bottom="43" styleName="yellowBoldVeryBig" textAlign="center" horizontalCenter="0"/>	
	<s:Button label="{resourceManager.getString('main','FriendSelectorTitle')}" horizontalCenter="0" bottom="15" click="SignUpClickHandler(event)" minWidth="80" skinClass="GameView.Skins.ButtonGreySkin" />
	<s:Button label="X" minHeight="23" minWidth="23" top="15" right="15" click="CloseClickHandler(event)" skinClass="GameView.Skins.ButtonGreySkin" />
	
</s:Group>
