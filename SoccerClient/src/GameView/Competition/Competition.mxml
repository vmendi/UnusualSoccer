<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:Competition="GameView.Competition.*"
		 width="100%" height="100%"
		 addedToStage="AddedToStageHandler(event)"
		 creationComplete="CreationCompleteHandler(event)"
		 currentState="Empty" xmlns:Team="GameView.Team.*">
	
	<fx:Style source="../styles.css" />
	
	<s:states>
		<s:State name="Empty" />
		<s:State name="OutOfCredit" />
		<s:State name="AvailableCredit" />
	</s:states>
	
	<fx:Script><![CDATA[
		import GameModel.CompetitionModel;
		import GameModel.MainGameModel;
		
		import GameView.Skins.DefaultPanelSkin;
		
		import mx.binding.utils.BindingUtils;
		import mx.events.FlexEvent;
		
		import utils.TimeUtils;
		
		protected function AddedToStageHandler(event:Event):void
		{
			//GameMetrics.ReportEvent(GameMetrics.VIEW_RANKING);

			// Se produce el AddedToStage antes q el CreationComplete (solo la primera vez, luego no se produce mas el CreationComplete, claro)
			if (mCompetitionModel != null)
			{
				mCompetitionModel.RefreshGroup(OnGroupRefreshed);
				mCompetitionModel.RefreshSeasonEndDate();
			}
		}
		
		protected function CreationCompleteHandler(event:FlexEvent):void
		{
			mGameModel = SoccerClient.GetMainGameModel();
			mCompetitionModel = mGameModel.TheCompetitionModel;
			
			BindingUtils.bindSetter(OnHasCreditChanged, mGameModel.TheTicketModel, ["HasCredit"]);
			
			mCompetitionModel.RefreshGroup(OnGroupRefreshed);
			mCompetitionModel.RefreshSeasonEndDate();
		}
		
		private function OnHasCreditChanged(hasCredit : Boolean) : void
		{
			if (hasCredit)
				currentState = "AvailableCredit";
			else
				currentState = "OutOfCredit";
		}
		
		private function OnGroupRefreshed() : void
		{
			if (MyCompetitionList != null)
			{
				MyCompetitionList.selectedItem = mCompetitionModel.GetLocalGroupEntry();
				MyCompetitionList.callLater(EnsureSelectedIsVisible);
			}
		}
		
		private function EnsureSelectedIsVisible() : void
		{
			var idx : int = MyCompetitionList.dataProvider.getItemIndex(mCompetitionModel.GetLocalGroupEntry());
						
			if (idx + 4 < MyCompetitionList.dataProvider.length)
				idx += 4;
			else
				idx = MyCompetitionList.dataProvider.length-1;
			
			try {			
				MyCompetitionList.ensureIndexIsVisible(idx);
			} catch(e:Error) {}
		}

		[Bindable]
		private var mCompetitionModel : CompetitionModel;
		private var mGameModel : MainGameModel;

	]]></fx:Script>
	
		
	<s:Panel skinClass="GameView.Skins.DefaultPanelSkin" top="10" bottom="10" left="10" width="740" title="RANKING DE TU DIVISION">
		<s:BitmapImage source="@Embed(source='/Assets/General.swf', symbol='CompeticionCabeceraFondo')" fillMode="clip" />
		
		<s:Label width="147" x="0" y="9" text="DIVISIÃ“N" styleName="whiteBoldMedium" textAlign="center" />
		
		<s:Label width="72" x="148" y="9" text="GRUPO" styleName="whiteBoldMedium" textAlign="center" />
		<!--<s:Label id="MyGroupNameLabel" text="{mCompetitionModel.TheGroup.GroupName}" width="72" x="148" y="41" styleName="whiteBoldVeryBig" textAlign="center" />-->
		
		<s:Label width="192" x="221" y="9" text="FIN DE TEMPORADA EN:" styleName="whiteBoldMedium" textAlign="center" />
		<s:Label width="192" x="221" y="45" text="{TimeUtils.ConvertSecondsToStringWithDays(mCompetitionModel.RemainingSeasonSeconds)}" 
				 styleName="whiteBoldBig" textAlign="center" />

		<s:List id="MyCompetitionList" left="0" right="0" top="74" height="366"
				dataProvider="{mCompetitionModel.TheGroup.GroupEntries}" skinClass="GameView.Competition.CompetitionListSkin"		
				itemRenderer="GameView.Competition.CompetitionGroupItem" useVirtualLayout="true"/>
	</s:Panel>
	
	<Competition:LookingForMatchPanel x="424" y="49" includeIn="AvailableCredit" />
	
	<s:Label id="MyOutOfCredit" right="10" y="29" text="OUT OF CREDIT BLAH BLAH" includeIn="OutOfCredit" styleName="whiteBoldMedium" />
</s:Group>