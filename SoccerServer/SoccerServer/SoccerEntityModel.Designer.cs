//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.CompetitionDivision), "CompetitionDivisions1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.CompetitionDivision), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.CompetitionDivision), "CompetitionGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.CompetitionGroup), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.CompetitionGroup), "CompetitionGroupEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.CompetitionGroupEntry), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CompetitionGroupEntries_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "CompetitionGroupEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.CompetitionGroupEntry), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.CompetitionSeason), "CompetitionGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.CompetitionGroup), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_MatchParticipations_Matches", "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Match), "MatchParticipations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.MatchParticipation), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_MatchParticipations_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "MatchParticipations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.MatchParticipation), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_PendingTrainings_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "PendingTrainings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBModel.PendingTraining), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.TrainingDefinition), "PendingTrainings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.PendingTraining), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Sessions_Players", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Player), "Sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.Session), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Teams_Players", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Player), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBModel.Team), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Teams_PredefinedTeams", "PredefinedTeams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.PredefinedTeam), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.Team), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Requests_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "Requests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.Request), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_SoccerPlayers_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "SoccerPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.SoccerPlayer), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.SpecialTrainingDefinition), "SpecialTrainings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.SpecialTraining), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_SpecialTrainings_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "SpecialTrainings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.SpecialTraining), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Tickets_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBModel.Ticket), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "CompetitionMatchParticipations", "CompetitionGroupEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBModel.CompetitionGroupEntry), "MatchParticipations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBModel.MatchParticipation))]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_TeamStats_TeamStats", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBModel.Team), "TeamStat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBModel.TeamStat), true)]

#endregion

namespace DBModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SoccerDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SoccerDataContext object using the connection string found in the 'SoccerDataContext' section of the application configuration file.
        /// </summary>
        public SoccerDataContext() : base("name=SoccerDataContext", "SoccerDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SoccerDataContext object.
        /// </summary>
        public SoccerDataContext(string connectionString) : base(connectionString, "SoccerDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SoccerDataContext object.
        /// </summary>
        public SoccerDataContext(EntityConnection connection) : base(connection, "SoccerDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionDivision> CompetitionDivisions
        {
            get
            {
                if ((_CompetitionDivisions == null))
                {
                    _CompetitionDivisions = base.CreateObjectSet<CompetitionDivision>("CompetitionDivisions");
                }
                return _CompetitionDivisions;
            }
        }
        private ObjectSet<CompetitionDivision> _CompetitionDivisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionGroupEntry> CompetitionGroupEntries
        {
            get
            {
                if ((_CompetitionGroupEntries == null))
                {
                    _CompetitionGroupEntries = base.CreateObjectSet<CompetitionGroupEntry>("CompetitionGroupEntries");
                }
                return _CompetitionGroupEntries;
            }
        }
        private ObjectSet<CompetitionGroupEntry> _CompetitionGroupEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionGroup> CompetitionGroups
        {
            get
            {
                if ((_CompetitionGroups == null))
                {
                    _CompetitionGroups = base.CreateObjectSet<CompetitionGroup>("CompetitionGroups");
                }
                return _CompetitionGroups;
            }
        }
        private ObjectSet<CompetitionGroup> _CompetitionGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionSeason> CompetitionSeasons
        {
            get
            {
                if ((_CompetitionSeasons == null))
                {
                    _CompetitionSeasons = base.CreateObjectSet<CompetitionSeason>("CompetitionSeasons");
                }
                return _CompetitionSeasons;
            }
        }
        private ObjectSet<CompetitionSeason> _CompetitionSeasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Match> Matches
        {
            get
            {
                if ((_Matches == null))
                {
                    _Matches = base.CreateObjectSet<Match>("Matches");
                }
                return _Matches;
            }
        }
        private ObjectSet<Match> _Matches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MatchParticipation> MatchParticipations
        {
            get
            {
                if ((_MatchParticipations == null))
                {
                    _MatchParticipations = base.CreateObjectSet<MatchParticipation>("MatchParticipations");
                }
                return _MatchParticipations;
            }
        }
        private ObjectSet<MatchParticipation> _MatchParticipations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendingTraining> PendingTrainings
        {
            get
            {
                if ((_PendingTrainings == null))
                {
                    _PendingTrainings = base.CreateObjectSet<PendingTraining>("PendingTrainings");
                }
                return _PendingTrainings;
            }
        }
        private ObjectSet<PendingTraining> _PendingTrainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PredefinedTeam> PredefinedTeams
        {
            get
            {
                if ((_PredefinedTeams == null))
                {
                    _PredefinedTeams = base.CreateObjectSet<PredefinedTeam>("PredefinedTeams");
                }
                return _PredefinedTeams;
            }
        }
        private ObjectSet<PredefinedTeam> _PredefinedTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purchase> Purchases
        {
            get
            {
                if ((_Purchases == null))
                {
                    _Purchases = base.CreateObjectSet<Purchase>("Purchases");
                }
                return _Purchases;
            }
        }
        private ObjectSet<Purchase> _Purchases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SoccerPlayer> SoccerPlayers
        {
            get
            {
                if ((_SoccerPlayers == null))
                {
                    _SoccerPlayers = base.CreateObjectSet<SoccerPlayer>("SoccerPlayers");
                }
                return _SoccerPlayers;
            }
        }
        private ObjectSet<SoccerPlayer> _SoccerPlayers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecialTrainingDefinition> SpecialTrainingDefinitions
        {
            get
            {
                if ((_SpecialTrainingDefinitions == null))
                {
                    _SpecialTrainingDefinitions = base.CreateObjectSet<SpecialTrainingDefinition>("SpecialTrainingDefinitions");
                }
                return _SpecialTrainingDefinitions;
            }
        }
        private ObjectSet<SpecialTrainingDefinition> _SpecialTrainingDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecialTraining> SpecialTrainings
        {
            get
            {
                if ((_SpecialTrainings == null))
                {
                    _SpecialTrainings = base.CreateObjectSet<SpecialTraining>("SpecialTrainings");
                }
                return _SpecialTrainings;
            }
        }
        private ObjectSet<SpecialTraining> _SpecialTrainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingDefinition> TrainingDefinitions
        {
            get
            {
                if ((_TrainingDefinitions == null))
                {
                    _TrainingDefinitions = base.CreateObjectSet<TrainingDefinition>("TrainingDefinitions");
                }
                return _TrainingDefinitions;
            }
        }
        private ObjectSet<TrainingDefinition> _TrainingDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamStat> TeamStats
        {
            get
            {
                if ((_TeamStats == null))
                {
                    _TeamStats = base.CreateObjectSet<TeamStat>("TeamStats");
                }
                return _TeamStats;
            }
        }
        private ObjectSet<TeamStat> _TeamStats;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionDivisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionDivisions(CompetitionDivision competitionDivision)
        {
            base.AddObject("CompetitionDivisions", competitionDivision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionGroupEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionGroupEntries(CompetitionGroupEntry competitionGroupEntry)
        {
            base.AddObject("CompetitionGroupEntries", competitionGroupEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionGroups(CompetitionGroup competitionGroup)
        {
            base.AddObject("CompetitionGroups", competitionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionSeasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionSeasons(CompetitionSeason competitionSeason)
        {
            base.AddObject("CompetitionSeasons", competitionSeason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Matches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatches(Match match)
        {
            base.AddObject("Matches", match);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MatchParticipations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatchParticipations(MatchParticipation matchParticipation)
        {
            base.AddObject("MatchParticipations", matchParticipation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PendingTrainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPendingTrainings(PendingTraining pendingTraining)
        {
            base.AddObject("PendingTrainings", pendingTraining);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PredefinedTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPredefinedTeams(PredefinedTeam predefinedTeam)
        {
            base.AddObject("PredefinedTeams", predefinedTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purchases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchases(Purchase purchase)
        {
            base.AddObject("Purchases", purchase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SoccerPlayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccerPlayers(SoccerPlayer soccerPlayer)
        {
            base.AddObject("SoccerPlayers", soccerPlayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialTrainingDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialTrainingDefinitions(SpecialTrainingDefinition specialTrainingDefinition)
        {
            base.AddObject("SpecialTrainingDefinitions", specialTrainingDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialTrainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialTrainings(SpecialTraining specialTraining)
        {
            base.AddObject("SpecialTrainings", specialTraining);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingDefinitions(TrainingDefinition trainingDefinition)
        {
            base.AddObject("TrainingDefinitions", trainingDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamStats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamStats(TeamStat teamStat)
        {
            base.AddObject("TeamStats", teamStat);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="CompetitionDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionDivision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionDivision object.
        /// </summary>
        /// <param name="competitionDivisionID">Initial value of the CompetitionDivisionID property.</param>
        /// <param name="divisionName">Initial value of the DivisionName property.</param>
        /// <param name="minimumPoints">Initial value of the MinimumPoints property.</param>
        /// <param name="parentCompetitionDivisionID">Initial value of the ParentCompetitionDivisionID property.</param>
        public static CompetitionDivision CreateCompetitionDivision(global::System.Int32 competitionDivisionID, global::System.String divisionName, global::System.Int32 minimumPoints, global::System.Int32 parentCompetitionDivisionID)
        {
            CompetitionDivision competitionDivision = new CompetitionDivision();
            competitionDivision.CompetitionDivisionID = competitionDivisionID;
            competitionDivision.DivisionName = divisionName;
            competitionDivision.MinimumPoints = minimumPoints;
            competitionDivision.ParentCompetitionDivisionID = parentCompetitionDivisionID;
            return competitionDivision;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionDivisionID
        {
            get
            {
                return _CompetitionDivisionID;
            }
            set
            {
                if (_CompetitionDivisionID != value)
                {
                    OnCompetitionDivisionIDChanging(value);
                    ReportPropertyChanging("CompetitionDivisionID");
                    _CompetitionDivisionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionDivisionID");
                    OnCompetitionDivisionIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionDivisionID;
        partial void OnCompetitionDivisionIDChanging(global::System.Int32 value);
        partial void OnCompetitionDivisionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DivisionName
        {
            get
            {
                return _DivisionName;
            }
            set
            {
                OnDivisionNameChanging(value);
                ReportPropertyChanging("DivisionName");
                _DivisionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DivisionName");
                OnDivisionNameChanged();
            }
        }
        private global::System.String _DivisionName;
        partial void OnDivisionNameChanging(global::System.String value);
        partial void OnDivisionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumPoints
        {
            get
            {
                return _MinimumPoints;
            }
            set
            {
                OnMinimumPointsChanging(value);
                ReportPropertyChanging("MinimumPoints");
                _MinimumPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumPoints");
                OnMinimumPointsChanged();
            }
        }
        private global::System.Int32 _MinimumPoints;
        partial void OnMinimumPointsChanging(global::System.Int32 value);
        partial void OnMinimumPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentCompetitionDivisionID
        {
            get
            {
                return _ParentCompetitionDivisionID;
            }
            set
            {
                OnParentCompetitionDivisionIDChanging(value);
                ReportPropertyChanging("ParentCompetitionDivisionID");
                _ParentCompetitionDivisionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCompetitionDivisionID");
                OnParentCompetitionDivisionIDChanged();
            }
        }
        private global::System.Int32 _ParentCompetitionDivisionID;
        partial void OnParentCompetitionDivisionIDChanging(global::System.Int32 value);
        partial void OnParentCompetitionDivisionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions1")]
        public EntityCollection<CompetitionDivision> CompetitionDivisions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions")]
        public CompetitionDivision CompetitionDivision1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionDivision> CompetitionDivision1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionDivisions_CompetitionDivisions", "CompetitionDivisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionDivisions", "CompetitionGroups")]
        public EntityCollection<CompetitionGroup> CompetitionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionGroup>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionGroup>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="CompetitionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionGroup object.
        /// </summary>
        /// <param name="competitionGroupID">Initial value of the CompetitionGroupID property.</param>
        /// <param name="competitionDivisionID">Initial value of the CompetitionDivisionID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="competitionSeasonID">Initial value of the CompetitionSeasonID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static CompetitionGroup CreateCompetitionGroup(global::System.Int32 competitionGroupID, global::System.Int32 competitionDivisionID, global::System.String groupName, global::System.Int32 competitionSeasonID, global::System.DateTime creationDate)
        {
            CompetitionGroup competitionGroup = new CompetitionGroup();
            competitionGroup.CompetitionGroupID = competitionGroupID;
            competitionGroup.CompetitionDivisionID = competitionDivisionID;
            competitionGroup.GroupName = groupName;
            competitionGroup.CompetitionSeasonID = competitionSeasonID;
            competitionGroup.CreationDate = creationDate;
            return competitionGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionGroupID
        {
            get
            {
                return _CompetitionGroupID;
            }
            set
            {
                if (_CompetitionGroupID != value)
                {
                    OnCompetitionGroupIDChanging(value);
                    ReportPropertyChanging("CompetitionGroupID");
                    _CompetitionGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionGroupID");
                    OnCompetitionGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionGroupID;
        partial void OnCompetitionGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitionGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionDivisionID
        {
            get
            {
                return _CompetitionDivisionID;
            }
            set
            {
                OnCompetitionDivisionIDChanging(value);
                ReportPropertyChanging("CompetitionDivisionID");
                _CompetitionDivisionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionDivisionID");
                OnCompetitionDivisionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionDivisionID;
        partial void OnCompetitionDivisionIDChanging(global::System.Int32 value);
        partial void OnCompetitionDivisionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionSeasonID
        {
            get
            {
                return _CompetitionSeasonID;
            }
            set
            {
                OnCompetitionSeasonIDChanging(value);
                ReportPropertyChanging("CompetitionSeasonID");
                _CompetitionSeasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionSeasonID");
                OnCompetitionSeasonIDChanged();
            }
        }
        private global::System.Int32 _CompetitionSeasonID;
        partial void OnCompetitionSeasonIDChanging(global::System.Int32 value);
        partial void OnCompetitionSeasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions")]
        public CompetitionDivision CompetitionDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionDivision> CompetitionDivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionDivision>("SoccerModel.FK_CompetitionGroups_CompetitionDivisions", "CompetitionDivisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroupEntries")]
        public EntityCollection<CompetitionGroupEntry> CompetitionGroupEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionGroupEntry>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroupEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionGroupEntry>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroupEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons")]
        public CompetitionSeason CompetitionSeason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionSeason>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionSeason>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionSeason> CompetitionSeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionSeason>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionSeason>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionSeasons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="CompetitionGroupEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionGroupEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionGroupEntry object.
        /// </summary>
        /// <param name="competitionGroupEntryID">Initial value of the CompetitionGroupEntryID property.</param>
        /// <param name="competitionGroupID">Initial value of the CompetitionGroupID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="numMatchesPlayed">Initial value of the NumMatchesPlayed property.</param>
        /// <param name="numMatchesWon">Initial value of the NumMatchesWon property.</param>
        /// <param name="numMatchesDraw">Initial value of the NumMatchesDraw property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        public static CompetitionGroupEntry CreateCompetitionGroupEntry(global::System.Int32 competitionGroupEntryID, global::System.Int32 competitionGroupID, global::System.Int32 teamID, global::System.Int32 numMatchesPlayed, global::System.Int32 numMatchesWon, global::System.Int32 numMatchesDraw, global::System.Int32 points)
        {
            CompetitionGroupEntry competitionGroupEntry = new CompetitionGroupEntry();
            competitionGroupEntry.CompetitionGroupEntryID = competitionGroupEntryID;
            competitionGroupEntry.CompetitionGroupID = competitionGroupID;
            competitionGroupEntry.TeamID = teamID;
            competitionGroupEntry.NumMatchesPlayed = numMatchesPlayed;
            competitionGroupEntry.NumMatchesWon = numMatchesWon;
            competitionGroupEntry.NumMatchesDraw = numMatchesDraw;
            competitionGroupEntry.Points = points;
            return competitionGroupEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionGroupEntryID
        {
            get
            {
                return _CompetitionGroupEntryID;
            }
            set
            {
                if (_CompetitionGroupEntryID != value)
                {
                    OnCompetitionGroupEntryIDChanging(value);
                    ReportPropertyChanging("CompetitionGroupEntryID");
                    _CompetitionGroupEntryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionGroupEntryID");
                    OnCompetitionGroupEntryIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionGroupEntryID;
        partial void OnCompetitionGroupEntryIDChanging(global::System.Int32 value);
        partial void OnCompetitionGroupEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionGroupID
        {
            get
            {
                return _CompetitionGroupID;
            }
            set
            {
                OnCompetitionGroupIDChanging(value);
                ReportPropertyChanging("CompetitionGroupID");
                _CompetitionGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionGroupID");
                OnCompetitionGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitionGroupID;
        partial void OnCompetitionGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitionGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumMatchesPlayed
        {
            get
            {
                return _NumMatchesPlayed;
            }
            set
            {
                OnNumMatchesPlayedChanging(value);
                ReportPropertyChanging("NumMatchesPlayed");
                _NumMatchesPlayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumMatchesPlayed");
                OnNumMatchesPlayedChanged();
            }
        }
        private global::System.Int32 _NumMatchesPlayed;
        partial void OnNumMatchesPlayedChanging(global::System.Int32 value);
        partial void OnNumMatchesPlayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumMatchesWon
        {
            get
            {
                return _NumMatchesWon;
            }
            set
            {
                OnNumMatchesWonChanging(value);
                ReportPropertyChanging("NumMatchesWon");
                _NumMatchesWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumMatchesWon");
                OnNumMatchesWonChanged();
            }
        }
        private global::System.Int32 _NumMatchesWon;
        partial void OnNumMatchesWonChanging(global::System.Int32 value);
        partial void OnNumMatchesWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumMatchesDraw
        {
            get
            {
                return _NumMatchesDraw;
            }
            set
            {
                OnNumMatchesDrawChanging(value);
                ReportPropertyChanging("NumMatchesDraw");
                _NumMatchesDraw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumMatchesDraw");
                OnNumMatchesDrawChanged();
            }
        }
        private global::System.Int32 _NumMatchesDraw;
        partial void OnNumMatchesDrawChanging(global::System.Int32 value);
        partial void OnNumMatchesDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups")]
        public CompetitionGroup CompetitionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroup>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroup>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionGroup> CompetitionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroup>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionGroup>("SoccerModel.FK_CompetitionGroupEntries_CompetitionGroups", "CompetitionGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroupEntries_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_CompetitionGroupEntries_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_CompetitionGroupEntries_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_CompetitionGroupEntries_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_CompetitionGroupEntries_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "CompetitionMatchParticipations", "MatchParticipations")]
        public EntityCollection<MatchParticipation> MatchParticipations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatchParticipation>("SoccerModel.CompetitionMatchParticipations", "MatchParticipations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatchParticipation>("SoccerModel.CompetitionMatchParticipations", "MatchParticipations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="CompetitionSeason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionSeason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionSeason object.
        /// </summary>
        /// <param name="competitionSeasonID">Initial value of the CompetitionSeasonID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static CompetitionSeason CreateCompetitionSeason(global::System.Int32 competitionSeasonID, global::System.DateTime creationDate)
        {
            CompetitionSeason competitionSeason = new CompetitionSeason();
            competitionSeason.CompetitionSeasonID = competitionSeasonID;
            competitionSeason.CreationDate = creationDate;
            return competitionSeason;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionSeasonID
        {
            get
            {
                return _CompetitionSeasonID;
            }
            set
            {
                if (_CompetitionSeasonID != value)
                {
                    OnCompetitionSeasonIDChanging(value);
                    ReportPropertyChanging("CompetitionSeasonID");
                    _CompetitionSeasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionSeasonID");
                    OnCompetitionSeasonIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionSeasonID;
        partial void OnCompetitionSeasonIDChanging(global::System.Int32 value);
        partial void OnCompetitionSeasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroups_CompetitionSeasons", "CompetitionGroups")]
        public EntityCollection<CompetitionGroup> CompetitionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionGroup>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionGroup>("SoccerModel.FK_CompetitionGroups_CompetitionSeasons", "CompetitionGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Match")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Match : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Match object.
        /// </summary>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="dateStarted">Initial value of the DateStarted property.</param>
        /// <param name="isFriendly">Initial value of the IsFriendly property.</param>
        /// <param name="matchDuration">Initial value of the MatchDuration property.</param>
        /// <param name="turnDuration">Initial value of the TurnDuration property.</param>
        public static Match CreateMatch(global::System.Int32 matchID, global::System.DateTime dateStarted, global::System.Boolean isFriendly, global::System.Int32 matchDuration, global::System.Int32 turnDuration)
        {
            Match match = new Match();
            match.MatchID = matchID;
            match.DateStarted = dateStarted;
            match.IsFriendly = isFriendly;
            match.MatchDuration = matchDuration;
            match.TurnDuration = turnDuration;
            return match;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                if (_MatchID != value)
                {
                    OnMatchIDChanging(value);
                    ReportPropertyChanging("MatchID");
                    _MatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatchID");
                    OnMatchIDChanged();
                }
            }
        }
        private global::System.Int32 _MatchID;
        partial void OnMatchIDChanging(global::System.Int32 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStarted
        {
            get
            {
                return _DateStarted;
            }
            set
            {
                OnDateStartedChanging(value);
                ReportPropertyChanging("DateStarted");
                _DateStarted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStarted");
                OnDateStartedChanged();
            }
        }
        private global::System.DateTime _DateStarted;
        partial void OnDateStartedChanging(global::System.DateTime value);
        partial void OnDateStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnded
        {
            get
            {
                return _DateEnded;
            }
            set
            {
                OnDateEndedChanging(value);
                ReportPropertyChanging("DateEnded");
                _DateEnded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnded");
                OnDateEndedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnded;
        partial void OnDateEndedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasTooManyTimes
        {
            get
            {
                return _WasTooManyTimes;
            }
            set
            {
                OnWasTooManyTimesChanging(value);
                ReportPropertyChanging("WasTooManyTimes");
                _WasTooManyTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasTooManyTimes");
                OnWasTooManyTimesChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasTooManyTimes;
        partial void OnWasTooManyTimesChanging(Nullable<global::System.Boolean> value);
        partial void OnWasTooManyTimesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasJust
        {
            get
            {
                return _WasJust;
            }
            set
            {
                OnWasJustChanging(value);
                ReportPropertyChanging("WasJust");
                _WasJust = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasJust");
                OnWasJustChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasJust;
        partial void OnWasJustChanging(Nullable<global::System.Boolean> value);
        partial void OnWasJustChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasAbandoned
        {
            get
            {
                return _WasAbandoned;
            }
            set
            {
                OnWasAbandonedChanging(value);
                ReportPropertyChanging("WasAbandoned");
                _WasAbandoned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasAbandoned");
                OnWasAbandonedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasAbandoned;
        partial void OnWasAbandonedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasAbandonedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasAbandonedSameIP
        {
            get
            {
                return _WasAbandonedSameIP;
            }
            set
            {
                OnWasAbandonedSameIPChanging(value);
                ReportPropertyChanging("WasAbandonedSameIP");
                _WasAbandonedSameIP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasAbandonedSameIP");
                OnWasAbandonedSameIPChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasAbandonedSameIP;
        partial void OnWasAbandonedSameIPChanging(Nullable<global::System.Boolean> value);
        partial void OnWasAbandonedSameIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFriendly
        {
            get
            {
                return _IsFriendly;
            }
            set
            {
                OnIsFriendlyChanging(value);
                ReportPropertyChanging("IsFriendly");
                _IsFriendly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFriendly");
                OnIsFriendlyChanged();
            }
        }
        private global::System.Boolean _IsFriendly;
        partial void OnIsFriendlyChanging(global::System.Boolean value);
        partial void OnIsFriendlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchDuration
        {
            get
            {
                return _MatchDuration;
            }
            set
            {
                OnMatchDurationChanging(value);
                ReportPropertyChanging("MatchDuration");
                _MatchDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchDuration");
                OnMatchDurationChanged();
            }
        }
        private global::System.Int32 _MatchDuration;
        partial void OnMatchDurationChanging(global::System.Int32 value);
        partial void OnMatchDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TurnDuration
        {
            get
            {
                return _TurnDuration;
            }
            set
            {
                OnTurnDurationChanging(value);
                ReportPropertyChanging("TurnDuration");
                _TurnDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurnDuration");
                OnTurnDurationChanged();
            }
        }
        private global::System.Int32 _TurnDuration;
        partial void OnTurnDurationChanging(global::System.Int32 value);
        partial void OnTurnDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_MatchParticipations_Matches", "MatchParticipations")]
        public EntityCollection<MatchParticipation> MatchParticipations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatchParticipation>("SoccerModel.FK_MatchParticipations_Matches", "MatchParticipations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatchParticipation>("SoccerModel.FK_MatchParticipations_Matches", "MatchParticipations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="MatchParticipation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatchParticipation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MatchParticipation object.
        /// </summary>
        /// <param name="matchParticipationID">Initial value of the MatchParticipationID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="asHome">Initial value of the AsHome property.</param>
        /// <param name="goals">Initial value of the Goals property.</param>
        /// <param name="turnsPlayed">Initial value of the TurnsPlayed property.</param>
        public static MatchParticipation CreateMatchParticipation(global::System.Int32 matchParticipationID, global::System.Int32 matchID, global::System.Int32 teamID, global::System.Boolean asHome, global::System.Int32 goals, global::System.Int32 turnsPlayed)
        {
            MatchParticipation matchParticipation = new MatchParticipation();
            matchParticipation.MatchParticipationID = matchParticipationID;
            matchParticipation.MatchID = matchID;
            matchParticipation.TeamID = teamID;
            matchParticipation.AsHome = asHome;
            matchParticipation.Goals = goals;
            matchParticipation.TurnsPlayed = turnsPlayed;
            return matchParticipation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchParticipationID
        {
            get
            {
                return _MatchParticipationID;
            }
            set
            {
                if (_MatchParticipationID != value)
                {
                    OnMatchParticipationIDChanging(value);
                    ReportPropertyChanging("MatchParticipationID");
                    _MatchParticipationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatchParticipationID");
                    OnMatchParticipationIDChanged();
                }
            }
        }
        private global::System.Int32 _MatchParticipationID;
        partial void OnMatchParticipationIDChanging(global::System.Int32 value);
        partial void OnMatchParticipationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.Int32 _MatchID;
        partial void OnMatchIDChanging(global::System.Int32 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AsHome
        {
            get
            {
                return _AsHome;
            }
            set
            {
                OnAsHomeChanging(value);
                ReportPropertyChanging("AsHome");
                _AsHome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AsHome");
                OnAsHomeChanged();
            }
        }
        private global::System.Boolean _AsHome;
        partial void OnAsHomeChanging(global::System.Boolean value);
        partial void OnAsHomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Goals
        {
            get
            {
                return _Goals;
            }
            set
            {
                OnGoalsChanging(value);
                ReportPropertyChanging("Goals");
                _Goals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goals");
                OnGoalsChanged();
            }
        }
        private global::System.Int32 _Goals;
        partial void OnGoalsChanging(global::System.Int32 value);
        partial void OnGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TurnsPlayed
        {
            get
            {
                return _TurnsPlayed;
            }
            set
            {
                OnTurnsPlayedChanging(value);
                ReportPropertyChanging("TurnsPlayed");
                _TurnsPlayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurnsPlayed");
                OnTurnsPlayedChanged();
            }
        }
        private global::System.Int32 _TurnsPlayed;
        partial void OnTurnsPlayedChanging(global::System.Int32 value);
        partial void OnTurnsPlayedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_MatchParticipations_Matches", "Matches")]
        public Match Match
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Match>("SoccerModel.FK_MatchParticipations_Matches", "Matches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Match>("SoccerModel.FK_MatchParticipations_Matches", "Matches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Match> MatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Match>("SoccerModel.FK_MatchParticipations_Matches", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Match>("SoccerModel.FK_MatchParticipations_Matches", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_MatchParticipations_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_MatchParticipations_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_MatchParticipations_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_MatchParticipations_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_MatchParticipations_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "CompetitionMatchParticipations", "CompetitionGroupEntries")]
        public CompetitionGroupEntry CompetitionGroupEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroupEntry>("SoccerModel.CompetitionMatchParticipations", "CompetitionGroupEntries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroupEntry>("SoccerModel.CompetitionMatchParticipations", "CompetitionGroupEntries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionGroupEntry> CompetitionGroupEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionGroupEntry>("SoccerModel.CompetitionMatchParticipations", "CompetitionGroupEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionGroupEntry>("SoccerModel.CompetitionMatchParticipations", "CompetitionGroupEntries", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="PendingTraining")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingTraining : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PendingTraining object.
        /// </summary>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="trainingDefinitionID">Initial value of the TrainingDefinitionID property.</param>
        /// <param name="timeStart">Initial value of the TimeStart property.</param>
        /// <param name="timeEnd">Initial value of the TimeEnd property.</param>
        public static PendingTraining CreatePendingTraining(global::System.Int32 teamID, global::System.Int32 trainingDefinitionID, global::System.DateTime timeStart, global::System.DateTime timeEnd)
        {
            PendingTraining pendingTraining = new PendingTraining();
            pendingTraining.TeamID = teamID;
            pendingTraining.TrainingDefinitionID = trainingDefinitionID;
            pendingTraining.TimeStart = timeStart;
            pendingTraining.TimeEnd = timeEnd;
            return pendingTraining;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingDefinitionID
        {
            get
            {
                return _TrainingDefinitionID;
            }
            set
            {
                OnTrainingDefinitionIDChanging(value);
                ReportPropertyChanging("TrainingDefinitionID");
                _TrainingDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingDefinitionID");
                OnTrainingDefinitionIDChanged();
            }
        }
        private global::System.Int32 _TrainingDefinitionID;
        partial void OnTrainingDefinitionIDChanging(global::System.Int32 value);
        partial void OnTrainingDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStart
        {
            get
            {
                return _TimeStart;
            }
            set
            {
                OnTimeStartChanging(value);
                ReportPropertyChanging("TimeStart");
                _TimeStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStart");
                OnTimeStartChanged();
            }
        }
        private global::System.DateTime _TimeStart;
        partial void OnTimeStartChanging(global::System.DateTime value);
        partial void OnTimeStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeEnd
        {
            get
            {
                return _TimeEnd;
            }
            set
            {
                OnTimeEndChanging(value);
                ReportPropertyChanging("TimeEnd");
                _TimeEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeEnd");
                OnTimeEndChanged();
            }
        }
        private global::System.DateTime _TimeEnd;
        partial void OnTimeEndChanging(global::System.DateTime value);
        partial void OnTimeEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PendingTrainings_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_PendingTrainings_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_PendingTrainings_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_PendingTrainings_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_PendingTrainings_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions")]
        public TrainingDefinition TrainingDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingDefinition>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingDefinition>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrainingDefinition> TrainingDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingDefinition>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrainingDefinition>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "TrainingDefinitions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="facebookID">Initial value of the FacebookID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="liked">Initial value of the Liked property.</param>
        public static Player CreatePlayer(global::System.Int32 playerID, global::System.String name, global::System.String surname, global::System.Int64 facebookID, global::System.DateTime creationDate, global::System.Boolean liked)
        {
            Player player = new Player();
            player.PlayerID = playerID;
            player.Name = name;
            player.Surname = surname;
            player.FacebookID = facebookID;
            player.CreationDate = creationDate;
            player.Liked = liked;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                if (_PlayerID != value)
                {
                    OnPlayerIDChanging(value);
                    ReportPropertyChanging("PlayerID");
                    _PlayerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerID");
                    OnPlayerIDChanged();
                }
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookID
        {
            get
            {
                return _FacebookID;
            }
            set
            {
                OnFacebookIDChanging(value);
                ReportPropertyChanging("FacebookID");
                _FacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookID");
                OnFacebookIDChanged();
            }
        }
        private global::System.Int64 _FacebookID;
        partial void OnFacebookIDChanging(global::System.Int64 value);
        partial void OnFacebookIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Liked
        {
            get
            {
                return _Liked;
            }
            set
            {
                OnLikedChanging(value);
                ReportPropertyChanging("Liked");
                _Liked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Liked");
                OnLikedChanged();
            }
        }
        private global::System.Boolean _Liked;
        partial void OnLikedChanging(global::System.Boolean value);
        partial void OnLikedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Sessions_Players", "Sessions")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("SoccerModel.FK_Sessions_Players", "Sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("SoccerModel.FK_Sessions_Players", "Sessions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Teams_Players", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Teams_Players", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Teams_Players", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Teams_Players", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_Teams_Players", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="PredefinedTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PredefinedTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PredefinedTeam object.
        /// </summary>
        /// <param name="predefinedTeamID">Initial value of the PredefinedTeamID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PredefinedTeam CreatePredefinedTeam(global::System.Int32 predefinedTeamID, global::System.String name)
        {
            PredefinedTeam predefinedTeam = new PredefinedTeam();
            predefinedTeam.PredefinedTeamID = predefinedTeamID;
            predefinedTeam.Name = name;
            return predefinedTeam;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PredefinedTeamID
        {
            get
            {
                return _PredefinedTeamID;
            }
            set
            {
                if (_PredefinedTeamID != value)
                {
                    OnPredefinedTeamIDChanging(value);
                    ReportPropertyChanging("PredefinedTeamID");
                    _PredefinedTeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PredefinedTeamID");
                    OnPredefinedTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _PredefinedTeamID;
        partial void OnPredefinedTeamIDChanging(global::System.Int32 value);
        partial void OnPredefinedTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Teams_PredefinedTeams", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("SoccerModel.FK_Teams_PredefinedTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("SoccerModel.FK_Teams_PredefinedTeams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Purchase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchase object.
        /// </summary>
        /// <param name="purchaseID">Initial value of the PurchaseID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="facebookBuyerID">Initial value of the FacebookBuyerID property.</param>
        /// <param name="facebookOrderID">Initial value of the FacebookOrderID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="statusPlacedDate">Initial value of the StatusPlacedDate property.</param>
        public static Purchase CreatePurchase(global::System.Int32 purchaseID, global::System.String itemID, global::System.Int32 price, global::System.Int64 facebookBuyerID, global::System.Int64 facebookOrderID, global::System.String status, global::System.DateTime statusPlacedDate)
        {
            Purchase purchase = new Purchase();
            purchase.PurchaseID = purchaseID;
            purchase.ItemID = itemID;
            purchase.Price = price;
            purchase.FacebookBuyerID = facebookBuyerID;
            purchase.FacebookOrderID = facebookOrderID;
            purchase.Status = status;
            purchase.StatusPlacedDate = statusPlacedDate;
            return purchase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseID
        {
            get
            {
                return _PurchaseID;
            }
            set
            {
                if (_PurchaseID != value)
                {
                    OnPurchaseIDChanging(value);
                    ReportPropertyChanging("PurchaseID");
                    _PurchaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PurchaseID");
                    OnPurchaseIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseID;
        partial void OnPurchaseIDChanging(global::System.Int32 value);
        partial void OnPurchaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private global::System.String _ItemID;
        partial void OnItemIDChanging(global::System.String value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookBuyerID
        {
            get
            {
                return _FacebookBuyerID;
            }
            set
            {
                OnFacebookBuyerIDChanging(value);
                ReportPropertyChanging("FacebookBuyerID");
                _FacebookBuyerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookBuyerID");
                OnFacebookBuyerIDChanged();
            }
        }
        private global::System.Int64 _FacebookBuyerID;
        partial void OnFacebookBuyerIDChanging(global::System.Int64 value);
        partial void OnFacebookBuyerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookOrderID
        {
            get
            {
                return _FacebookOrderID;
            }
            set
            {
                OnFacebookOrderIDChanging(value);
                ReportPropertyChanging("FacebookOrderID");
                _FacebookOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookOrderID");
                OnFacebookOrderIDChanged();
            }
        }
        private global::System.Int64 _FacebookOrderID;
        partial void OnFacebookOrderIDChanging(global::System.Int64 value);
        partial void OnFacebookOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StatusPlacedDate
        {
            get
            {
                return _StatusPlacedDate;
            }
            set
            {
                OnStatusPlacedDateChanging(value);
                ReportPropertyChanging("StatusPlacedDate");
                _StatusPlacedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusPlacedDate");
                OnStatusPlacedDateChanged();
            }
        }
        private global::System.DateTime _StatusPlacedDate;
        partial void OnStatusPlacedDateChanging(global::System.DateTime value);
        partial void OnStatusPlacedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StatusSettledDate
        {
            get
            {
                return _StatusSettledDate;
            }
            set
            {
                OnStatusSettledDateChanging(value);
                ReportPropertyChanging("StatusSettledDate");
                _StatusSettledDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusSettledDate");
                OnStatusSettledDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StatusSettledDate;
        partial void OnStatusSettledDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStatusSettledDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="requestType">Initial value of the RequestType property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="facebookRequestID">Initial value of the FacebookRequestID property.</param>
        /// <param name="sourceTeamID">Initial value of the SourceTeamID property.</param>
        /// <param name="targetFacebookID">Initial value of the TargetFacebookID property.</param>
        public static Request CreateRequest(global::System.Int32 requestID, global::System.Int32 requestType, global::System.DateTime creationDate, global::System.String facebookRequestID, global::System.Int32 sourceTeamID, global::System.Int64 targetFacebookID)
        {
            Request request = new Request();
            request.RequestID = requestID;
            request.RequestType = requestType;
            request.CreationDate = creationDate;
            request.FacebookRequestID = facebookRequestID;
            request.SourceTeamID = sourceTeamID;
            request.TargetFacebookID = targetFacebookID;
            return request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                if (_RequestID != value)
                {
                    OnRequestIDChanging(value);
                    ReportPropertyChanging("RequestID");
                    _RequestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequestID");
                    OnRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestType
        {
            get
            {
                return _RequestType;
            }
            set
            {
                OnRequestTypeChanging(value);
                ReportPropertyChanging("RequestType");
                _RequestType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestType");
                OnRequestTypeChanged();
            }
        }
        private global::System.Int32 _RequestType;
        partial void OnRequestTypeChanging(global::System.Int32 value);
        partial void OnRequestTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDate
        {
            get
            {
                return _AnswerDate;
            }
            set
            {
                OnAnswerDateChanging(value);
                ReportPropertyChanging("AnswerDate");
                _AnswerDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerDate");
                OnAnswerDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDate;
        partial void OnAnswerDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacebookRequestID
        {
            get
            {
                return _FacebookRequestID;
            }
            set
            {
                OnFacebookRequestIDChanging(value);
                ReportPropertyChanging("FacebookRequestID");
                _FacebookRequestID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FacebookRequestID");
                OnFacebookRequestIDChanged();
            }
        }
        private global::System.String _FacebookRequestID;
        partial void OnFacebookRequestIDChanging(global::System.String value);
        partial void OnFacebookRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTeamID
        {
            get
            {
                return _SourceTeamID;
            }
            set
            {
                OnSourceTeamIDChanging(value);
                ReportPropertyChanging("SourceTeamID");
                _SourceTeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceTeamID");
                OnSourceTeamIDChanged();
            }
        }
        private global::System.Int32 _SourceTeamID;
        partial void OnSourceTeamIDChanging(global::System.Int32 value);
        partial void OnSourceTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetFacebookID
        {
            get
            {
                return _TargetFacebookID;
            }
            set
            {
                OnTargetFacebookIDChanging(value);
                ReportPropertyChanging("TargetFacebookID");
                _TargetFacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetFacebookID");
                OnTargetFacebookIDChanged();
            }
        }
        private global::System.Int64 _TargetFacebookID;
        partial void OnTargetFacebookIDChanging(global::System.Int64 value);
        partial void OnTargetFacebookIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Requests_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Requests_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Requests_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Requests_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_Requests_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="facebookSession">Initial value of the FacebookSession property.</param>
        public static Session CreateSession(global::System.Int32 sessionID, global::System.Int32 playerID, global::System.DateTime creationDate, global::System.String facebookSession)
        {
            Session session = new Session();
            session.SessionID = sessionID;
            session.PlayerID = playerID;
            session.CreationDate = creationDate;
            session.FacebookSession = facebookSession;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                if (_SessionID != value)
                {
                    OnSessionIDChanging(value);
                    ReportPropertyChanging("SessionID");
                    _SessionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionID");
                    OnSessionIDChanged();
                }
            }
        }
        private global::System.Int32 _SessionID;
        partial void OnSessionIDChanging(global::System.Int32 value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                OnPlayerIDChanging(value);
                ReportPropertyChanging("PlayerID");
                _PlayerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerID");
                OnPlayerIDChanged();
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacebookSession
        {
            get
            {
                return _FacebookSession;
            }
            set
            {
                OnFacebookSessionChanging(value);
                ReportPropertyChanging("FacebookSession");
                _FacebookSession = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FacebookSession");
                OnFacebookSessionChanged();
            }
        }
        private global::System.String _FacebookSession;
        partial void OnFacebookSessionChanging(global::System.String value);
        partial void OnFacebookSessionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Sessions_Players", "Players")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Sessions_Players", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Sessions_Players", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Sessions_Players", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("SoccerModel.FK_Sessions_Players", "Players", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="SoccerPlayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SoccerPlayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SoccerPlayer object.
        /// </summary>
        /// <param name="soccerPlayerID">Initial value of the SoccerPlayerID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dorsalNumber">Initial value of the DorsalNumber property.</param>
        /// <param name="facebookID">Initial value of the FacebookID property.</param>
        /// <param name="fieldPosition">Initial value of the FieldPosition property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="sliding">Initial value of the Sliding property.</param>
        /// <param name="power">Initial value of the Power property.</param>
        /// <param name="isInjured">Initial value of the IsInjured property.</param>
        public static SoccerPlayer CreateSoccerPlayer(global::System.Int32 soccerPlayerID, global::System.Int32 teamID, global::System.String name, global::System.Int32 dorsalNumber, global::System.Int64 facebookID, global::System.Int32 fieldPosition, global::System.Int32 weight, global::System.Int32 sliding, global::System.Int32 power, global::System.Boolean isInjured)
        {
            SoccerPlayer soccerPlayer = new SoccerPlayer();
            soccerPlayer.SoccerPlayerID = soccerPlayerID;
            soccerPlayer.TeamID = teamID;
            soccerPlayer.Name = name;
            soccerPlayer.DorsalNumber = dorsalNumber;
            soccerPlayer.FacebookID = facebookID;
            soccerPlayer.FieldPosition = fieldPosition;
            soccerPlayer.Weight = weight;
            soccerPlayer.Sliding = sliding;
            soccerPlayer.Power = power;
            soccerPlayer.IsInjured = isInjured;
            return soccerPlayer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SoccerPlayerID
        {
            get
            {
                return _SoccerPlayerID;
            }
            set
            {
                if (_SoccerPlayerID != value)
                {
                    OnSoccerPlayerIDChanging(value);
                    ReportPropertyChanging("SoccerPlayerID");
                    _SoccerPlayerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SoccerPlayerID");
                    OnSoccerPlayerIDChanged();
                }
            }
        }
        private global::System.Int32 _SoccerPlayerID;
        partial void OnSoccerPlayerIDChanging(global::System.Int32 value);
        partial void OnSoccerPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DorsalNumber
        {
            get
            {
                return _DorsalNumber;
            }
            set
            {
                OnDorsalNumberChanging(value);
                ReportPropertyChanging("DorsalNumber");
                _DorsalNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DorsalNumber");
                OnDorsalNumberChanged();
            }
        }
        private global::System.Int32 _DorsalNumber;
        partial void OnDorsalNumberChanging(global::System.Int32 value);
        partial void OnDorsalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FacebookID
        {
            get
            {
                return _FacebookID;
            }
            set
            {
                OnFacebookIDChanging(value);
                ReportPropertyChanging("FacebookID");
                _FacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookID");
                OnFacebookIDChanged();
            }
        }
        private global::System.Int64 _FacebookID;
        partial void OnFacebookIDChanging(global::System.Int64 value);
        partial void OnFacebookIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldPosition
        {
            get
            {
                return _FieldPosition;
            }
            set
            {
                OnFieldPositionChanging(value);
                ReportPropertyChanging("FieldPosition");
                _FieldPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldPosition");
                OnFieldPositionChanged();
            }
        }
        private global::System.Int32 _FieldPosition;
        partial void OnFieldPositionChanging(global::System.Int32 value);
        partial void OnFieldPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Int32 _Weight;
        partial void OnWeightChanging(global::System.Int32 value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sliding
        {
            get
            {
                return _Sliding;
            }
            set
            {
                OnSlidingChanging(value);
                ReportPropertyChanging("Sliding");
                _Sliding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sliding");
                OnSlidingChanged();
            }
        }
        private global::System.Int32 _Sliding;
        partial void OnSlidingChanging(global::System.Int32 value);
        partial void OnSlidingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Power
        {
            get
            {
                return _Power;
            }
            set
            {
                OnPowerChanging(value);
                ReportPropertyChanging("Power");
                _Power = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Power");
                OnPowerChanged();
            }
        }
        private global::System.Int32 _Power;
        partial void OnPowerChanging(global::System.Int32 value);
        partial void OnPowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInjured
        {
            get
            {
                return _IsInjured;
            }
            set
            {
                OnIsInjuredChanging(value);
                ReportPropertyChanging("IsInjured");
                _IsInjured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInjured");
                OnIsInjuredChanged();
            }
        }
        private global::System.Boolean _IsInjured;
        partial void OnIsInjuredChanging(global::System.Boolean value);
        partial void OnIsInjuredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SoccerPlayers_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SoccerPlayers_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SoccerPlayers_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SoccerPlayers_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_SoccerPlayers_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="SpecialTraining")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialTraining : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecialTraining object.
        /// </summary>
        /// <param name="specialTrainingID">Initial value of the SpecialTrainingID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="specialTrainingDefinitionID">Initial value of the SpecialTrainingDefinitionID property.</param>
        /// <param name="energyCurrent">Initial value of the EnergyCurrent property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        public static SpecialTraining CreateSpecialTraining(global::System.Int32 specialTrainingID, global::System.Int32 teamID, global::System.Int32 specialTrainingDefinitionID, global::System.Int32 energyCurrent, global::System.Boolean isCompleted)
        {
            SpecialTraining specialTraining = new SpecialTraining();
            specialTraining.SpecialTrainingID = specialTrainingID;
            specialTraining.TeamID = teamID;
            specialTraining.SpecialTrainingDefinitionID = specialTrainingDefinitionID;
            specialTraining.EnergyCurrent = energyCurrent;
            specialTraining.IsCompleted = isCompleted;
            return specialTraining;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialTrainingID
        {
            get
            {
                return _SpecialTrainingID;
            }
            set
            {
                if (_SpecialTrainingID != value)
                {
                    OnSpecialTrainingIDChanging(value);
                    ReportPropertyChanging("SpecialTrainingID");
                    _SpecialTrainingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecialTrainingID");
                    OnSpecialTrainingIDChanged();
                }
            }
        }
        private global::System.Int32 _SpecialTrainingID;
        partial void OnSpecialTrainingIDChanging(global::System.Int32 value);
        partial void OnSpecialTrainingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialTrainingDefinitionID
        {
            get
            {
                return _SpecialTrainingDefinitionID;
            }
            set
            {
                OnSpecialTrainingDefinitionIDChanging(value);
                ReportPropertyChanging("SpecialTrainingDefinitionID");
                _SpecialTrainingDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialTrainingDefinitionID");
                OnSpecialTrainingDefinitionIDChanged();
            }
        }
        private global::System.Int32 _SpecialTrainingDefinitionID;
        partial void OnSpecialTrainingDefinitionIDChanging(global::System.Int32 value);
        partial void OnSpecialTrainingDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnergyCurrent
        {
            get
            {
                return _EnergyCurrent;
            }
            set
            {
                OnEnergyCurrentChanging(value);
                ReportPropertyChanging("EnergyCurrent");
                _EnergyCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnergyCurrent");
                OnEnergyCurrentChanged();
            }
        }
        private global::System.Int32 _EnergyCurrent;
        partial void OnEnergyCurrentChanging(global::System.Int32 value);
        partial void OnEnergyCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions")]
        public SpecialTrainingDefinition SpecialTrainingDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecialTrainingDefinition>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecialTrainingDefinition>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpecialTrainingDefinition> SpecialTrainingDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecialTrainingDefinition>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpecialTrainingDefinition>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainingDefinitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SpecialTrainings_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SpecialTrainings_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SpecialTrainings_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_SpecialTrainings_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_SpecialTrainings_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="SpecialTrainingDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialTrainingDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecialTrainingDefinition object.
        /// </summary>
        /// <param name="specialTrainingDefinitionID">Initial value of the SpecialTrainingDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="requiredXP">Initial value of the RequiredXP property.</param>
        /// <param name="energyStep">Initial value of the EnergyStep property.</param>
        /// <param name="energyTotal">Initial value of the EnergyTotal property.</param>
        public static SpecialTrainingDefinition CreateSpecialTrainingDefinition(global::System.Int32 specialTrainingDefinitionID, global::System.String name, global::System.Int32 requiredXP, global::System.Int32 energyStep, global::System.Int32 energyTotal)
        {
            SpecialTrainingDefinition specialTrainingDefinition = new SpecialTrainingDefinition();
            specialTrainingDefinition.SpecialTrainingDefinitionID = specialTrainingDefinitionID;
            specialTrainingDefinition.Name = name;
            specialTrainingDefinition.RequiredXP = requiredXP;
            specialTrainingDefinition.EnergyStep = energyStep;
            specialTrainingDefinition.EnergyTotal = energyTotal;
            return specialTrainingDefinition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialTrainingDefinitionID
        {
            get
            {
                return _SpecialTrainingDefinitionID;
            }
            set
            {
                if (_SpecialTrainingDefinitionID != value)
                {
                    OnSpecialTrainingDefinitionIDChanging(value);
                    ReportPropertyChanging("SpecialTrainingDefinitionID");
                    _SpecialTrainingDefinitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecialTrainingDefinitionID");
                    OnSpecialTrainingDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _SpecialTrainingDefinitionID;
        partial void OnSpecialTrainingDefinitionIDChanging(global::System.Int32 value);
        partial void OnSpecialTrainingDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequiredXP
        {
            get
            {
                return _RequiredXP;
            }
            set
            {
                OnRequiredXPChanging(value);
                ReportPropertyChanging("RequiredXP");
                _RequiredXP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredXP");
                OnRequiredXPChanged();
            }
        }
        private global::System.Int32 _RequiredXP;
        partial void OnRequiredXPChanging(global::System.Int32 value);
        partial void OnRequiredXPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnergyStep
        {
            get
            {
                return _EnergyStep;
            }
            set
            {
                OnEnergyStepChanging(value);
                ReportPropertyChanging("EnergyStep");
                _EnergyStep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnergyStep");
                OnEnergyStepChanged();
            }
        }
        private global::System.Int32 _EnergyStep;
        partial void OnEnergyStepChanging(global::System.Int32 value);
        partial void OnEnergyStepChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnergyTotal
        {
            get
            {
                return _EnergyTotal;
            }
            set
            {
                OnEnergyTotalChanging(value);
                ReportPropertyChanging("EnergyTotal");
                _EnergyTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnergyTotal");
                OnEnergyTotalChanged();
            }
        }
        private global::System.Int32 _EnergyTotal;
        partial void OnEnergyTotalChanging(global::System.Int32 value);
        partial void OnEnergyTotalChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainings")]
        public EntityCollection<SpecialTraining> SpecialTrainings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialTraining>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialTraining>("SoccerModel.FK_SpecialTrainings_SpecialTrainingDefinitions", "SpecialTrainings", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="predefinedTeamID">Initial value of the PredefinedTeamID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="formation">Initial value of the Formation property.</param>
        /// <param name="trueSkill">Initial value of the TrueSkill property.</param>
        /// <param name="xP">Initial value of the XP property.</param>
        /// <param name="skillPoints">Initial value of the SkillPoints property.</param>
        /// <param name="energy">Initial value of the Energy property.</param>
        /// <param name="fitness">Initial value of the Fitness property.</param>
        /// <param name="mean">Initial value of the Mean property.</param>
        /// <param name="standardDeviation">Initial value of the StandardDeviation property.</param>
        public static Team CreateTeam(global::System.Int32 teamID, global::System.Int32 predefinedTeamID, global::System.String name, global::System.String formation, global::System.Int32 trueSkill, global::System.Int32 xP, global::System.Int32 skillPoints, global::System.Int32 energy, global::System.Int32 fitness, global::System.Double mean, global::System.Double standardDeviation)
        {
            Team team = new Team();
            team.TeamID = teamID;
            team.PredefinedTeamID = predefinedTeamID;
            team.Name = name;
            team.Formation = formation;
            team.TrueSkill = trueSkill;
            team.XP = xP;
            team.SkillPoints = skillPoints;
            team.Energy = energy;
            team.Fitness = fitness;
            team.Mean = mean;
            team.StandardDeviation = standardDeviation;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PredefinedTeamID
        {
            get
            {
                return _PredefinedTeamID;
            }
            set
            {
                OnPredefinedTeamIDChanging(value);
                ReportPropertyChanging("PredefinedTeamID");
                _PredefinedTeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PredefinedTeamID");
                OnPredefinedTeamIDChanged();
            }
        }
        private global::System.Int32 _PredefinedTeamID;
        partial void OnPredefinedTeamIDChanging(global::System.Int32 value);
        partial void OnPredefinedTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Formation
        {
            get
            {
                return _Formation;
            }
            set
            {
                OnFormationChanging(value);
                ReportPropertyChanging("Formation");
                _Formation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Formation");
                OnFormationChanged();
            }
        }
        private global::System.String _Formation;
        partial void OnFormationChanging(global::System.String value);
        partial void OnFormationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrueSkill
        {
            get
            {
                return _TrueSkill;
            }
            set
            {
                OnTrueSkillChanging(value);
                ReportPropertyChanging("TrueSkill");
                _TrueSkill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrueSkill");
                OnTrueSkillChanged();
            }
        }
        private global::System.Int32 _TrueSkill;
        partial void OnTrueSkillChanging(global::System.Int32 value);
        partial void OnTrueSkillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 XP
        {
            get
            {
                return _XP;
            }
            set
            {
                OnXPChanging(value);
                ReportPropertyChanging("XP");
                _XP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XP");
                OnXPChanged();
            }
        }
        private global::System.Int32 _XP;
        partial void OnXPChanging(global::System.Int32 value);
        partial void OnXPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillPoints
        {
            get
            {
                return _SkillPoints;
            }
            set
            {
                OnSkillPointsChanging(value);
                ReportPropertyChanging("SkillPoints");
                _SkillPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillPoints");
                OnSkillPointsChanged();
            }
        }
        private global::System.Int32 _SkillPoints;
        partial void OnSkillPointsChanging(global::System.Int32 value);
        partial void OnSkillPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Energy
        {
            get
            {
                return _Energy;
            }
            set
            {
                OnEnergyChanging(value);
                ReportPropertyChanging("Energy");
                _Energy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Energy");
                OnEnergyChanged();
            }
        }
        private global::System.Int32 _Energy;
        partial void OnEnergyChanging(global::System.Int32 value);
        partial void OnEnergyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Fitness
        {
            get
            {
                return _Fitness;
            }
            set
            {
                OnFitnessChanging(value);
                ReportPropertyChanging("Fitness");
                _Fitness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fitness");
                OnFitnessChanged();
            }
        }
        private global::System.Int32 _Fitness;
        partial void OnFitnessChanging(global::System.Int32 value);
        partial void OnFitnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Mean
        {
            get
            {
                return _Mean;
            }
            set
            {
                OnMeanChanging(value);
                ReportPropertyChanging("Mean");
                _Mean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mean");
                OnMeanChanged();
            }
        }
        private global::System.Double _Mean;
        partial void OnMeanChanging(global::System.Double value);
        partial void OnMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private global::System.Double _StandardDeviation;
        partial void OnStandardDeviationChanging(global::System.Double value);
        partial void OnStandardDeviationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CompetitionGroupEntries_Teams", "CompetitionGroupEntries")]
        public EntityCollection<CompetitionGroupEntry> CompetitionGroupEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionGroupEntry>("SoccerModel.FK_CompetitionGroupEntries_Teams", "CompetitionGroupEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionGroupEntry>("SoccerModel.FK_CompetitionGroupEntries_Teams", "CompetitionGroupEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_MatchParticipations_Teams", "MatchParticipations")]
        public EntityCollection<MatchParticipation> MatchParticipations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatchParticipation>("SoccerModel.FK_MatchParticipations_Teams", "MatchParticipations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatchParticipation>("SoccerModel.FK_MatchParticipations_Teams", "MatchParticipations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PendingTrainings_Teams", "PendingTrainings")]
        public PendingTraining PendingTraining
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PendingTraining>("SoccerModel.FK_PendingTrainings_Teams", "PendingTrainings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PendingTraining>("SoccerModel.FK_PendingTrainings_Teams", "PendingTrainings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PendingTraining> PendingTrainingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PendingTraining>("SoccerModel.FK_PendingTrainings_Teams", "PendingTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PendingTraining>("SoccerModel.FK_PendingTrainings_Teams", "PendingTrainings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Teams_Players", "Players")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Teams_Players", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Teams_Players", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_Teams_Players", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("SoccerModel.FK_Teams_Players", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Teams_PredefinedTeams", "PredefinedTeams")]
        public PredefinedTeam PredefinedTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PredefinedTeam>("SoccerModel.FK_Teams_PredefinedTeams", "PredefinedTeams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PredefinedTeam>("SoccerModel.FK_Teams_PredefinedTeams", "PredefinedTeams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PredefinedTeam> PredefinedTeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PredefinedTeam>("SoccerModel.FK_Teams_PredefinedTeams", "PredefinedTeams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PredefinedTeam>("SoccerModel.FK_Teams_PredefinedTeams", "PredefinedTeams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Requests_Teams", "Requests")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("SoccerModel.FK_Requests_Teams", "Requests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("SoccerModel.FK_Requests_Teams", "Requests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SoccerPlayers_Teams", "SoccerPlayers")]
        public EntityCollection<SoccerPlayer> SoccerPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SoccerPlayer>("SoccerModel.FK_SoccerPlayers_Teams", "SoccerPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SoccerPlayer>("SoccerModel.FK_SoccerPlayers_Teams", "SoccerPlayers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_SpecialTrainings_Teams", "SpecialTrainings")]
        public EntityCollection<SpecialTraining> SpecialTrainings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialTraining>("SoccerModel.FK_SpecialTrainings_Teams", "SpecialTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialTraining>("SoccerModel.FK_SpecialTrainings_Teams", "SpecialTrainings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Tickets_Teams", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SoccerModel.FK_Tickets_Teams", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SoccerModel.FK_Tickets_Teams", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("SoccerModel.FK_Tickets_Teams", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("SoccerModel.FK_Tickets_Teams", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamStats_TeamStats", "TeamStat")]
        public TeamStat TeamStat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamStat>("SoccerModel.FK_TeamStats_TeamStats", "TeamStat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamStat>("SoccerModel.FK_TeamStats_TeamStats", "TeamStat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamStat> TeamStatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamStat>("SoccerModel.FK_TeamStats_TeamStats", "TeamStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamStat>("SoccerModel.FK_TeamStats_TeamStats", "TeamStat", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="TeamStat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamStat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamStat object.
        /// </summary>
        /// <param name="teamStatsID">Initial value of the TeamStatsID property.</param>
        /// <param name="numPlayedMatches">Initial value of the NumPlayedMatches property.</param>
        /// <param name="numMatchesWon">Initial value of the NumMatchesWon property.</param>
        /// <param name="numMatchesDraw">Initial value of the NumMatchesDraw property.</param>
        /// <param name="scoredGoals">Initial value of the ScoredGoals property.</param>
        /// <param name="receivedGoals">Initial value of the ReceivedGoals property.</param>
        public static TeamStat CreateTeamStat(global::System.Int32 teamStatsID, global::System.Int32 numPlayedMatches, global::System.Int32 numMatchesWon, global::System.Int32 numMatchesDraw, global::System.Int32 scoredGoals, global::System.Int32 receivedGoals)
        {
            TeamStat teamStat = new TeamStat();
            teamStat.TeamStatsID = teamStatsID;
            teamStat.NumPlayedMatches = numPlayedMatches;
            teamStat.NumMatchesWon = numMatchesWon;
            teamStat.NumMatchesDraw = numMatchesDraw;
            teamStat.ScoredGoals = scoredGoals;
            teamStat.ReceivedGoals = receivedGoals;
            return teamStat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamStatsID
        {
            get
            {
                return _TeamStatsID;
            }
            set
            {
                if (_TeamStatsID != value)
                {
                    OnTeamStatsIDChanging(value);
                    ReportPropertyChanging("TeamStatsID");
                    _TeamStatsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamStatsID");
                    OnTeamStatsIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamStatsID;
        partial void OnTeamStatsIDChanging(global::System.Int32 value);
        partial void OnTeamStatsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumPlayedMatches
        {
            get
            {
                return _NumPlayedMatches;
            }
            set
            {
                OnNumPlayedMatchesChanging(value);
                ReportPropertyChanging("NumPlayedMatches");
                _NumPlayedMatches = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumPlayedMatches");
                OnNumPlayedMatchesChanged();
            }
        }
        private global::System.Int32 _NumPlayedMatches;
        partial void OnNumPlayedMatchesChanging(global::System.Int32 value);
        partial void OnNumPlayedMatchesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumMatchesWon
        {
            get
            {
                return _NumMatchesWon;
            }
            set
            {
                OnNumMatchesWonChanging(value);
                ReportPropertyChanging("NumMatchesWon");
                _NumMatchesWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumMatchesWon");
                OnNumMatchesWonChanged();
            }
        }
        private global::System.Int32 _NumMatchesWon;
        partial void OnNumMatchesWonChanging(global::System.Int32 value);
        partial void OnNumMatchesWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumMatchesDraw
        {
            get
            {
                return _NumMatchesDraw;
            }
            set
            {
                OnNumMatchesDrawChanging(value);
                ReportPropertyChanging("NumMatchesDraw");
                _NumMatchesDraw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumMatchesDraw");
                OnNumMatchesDrawChanged();
            }
        }
        private global::System.Int32 _NumMatchesDraw;
        partial void OnNumMatchesDrawChanging(global::System.Int32 value);
        partial void OnNumMatchesDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoredGoals
        {
            get
            {
                return _ScoredGoals;
            }
            set
            {
                OnScoredGoalsChanging(value);
                ReportPropertyChanging("ScoredGoals");
                _ScoredGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoredGoals");
                OnScoredGoalsChanged();
            }
        }
        private global::System.Int32 _ScoredGoals;
        partial void OnScoredGoalsChanging(global::System.Int32 value);
        partial void OnScoredGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivedGoals
        {
            get
            {
                return _ReceivedGoals;
            }
            set
            {
                OnReceivedGoalsChanging(value);
                ReportPropertyChanging("ReceivedGoals");
                _ReceivedGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedGoals");
                OnReceivedGoalsChanged();
            }
        }
        private global::System.Int32 _ReceivedGoals;
        partial void OnReceivedGoalsChanging(global::System.Int32 value);
        partial void OnReceivedGoalsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamStats_TeamStats", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamStats_TeamStats", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamStats_TeamStats", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamStats_TeamStats", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_TeamStats_TeamStats", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="ticketID">Initial value of the TicketID property.</param>
        /// <param name="remainingMatches">Initial value of the RemainingMatches property.</param>
        /// <param name="ticketKind">Initial value of the TicketKind property.</param>
        /// <param name="ticketPurchaseDate">Initial value of the TicketPurchaseDate property.</param>
        /// <param name="ticketExpiryDate">Initial value of the TicketExpiryDate property.</param>
        public static Ticket CreateTicket(global::System.Int32 ticketID, global::System.Int32 remainingMatches, global::System.Int32 ticketKind, global::System.DateTime ticketPurchaseDate, global::System.DateTime ticketExpiryDate)
        {
            Ticket ticket = new Ticket();
            ticket.TicketID = ticketID;
            ticket.RemainingMatches = remainingMatches;
            ticket.TicketKind = ticketKind;
            ticket.TicketPurchaseDate = ticketPurchaseDate;
            ticket.TicketExpiryDate = ticketExpiryDate;
            return ticket;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketID
        {
            get
            {
                return _TicketID;
            }
            set
            {
                if (_TicketID != value)
                {
                    OnTicketIDChanging(value);
                    ReportPropertyChanging("TicketID");
                    _TicketID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketID");
                    OnTicketIDChanged();
                }
            }
        }
        private global::System.Int32 _TicketID;
        partial void OnTicketIDChanging(global::System.Int32 value);
        partial void OnTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RemainingMatches
        {
            get
            {
                return _RemainingMatches;
            }
            set
            {
                OnRemainingMatchesChanging(value);
                ReportPropertyChanging("RemainingMatches");
                _RemainingMatches = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainingMatches");
                OnRemainingMatchesChanged();
            }
        }
        private global::System.Int32 _RemainingMatches;
        partial void OnRemainingMatchesChanging(global::System.Int32 value);
        partial void OnRemainingMatchesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketKind
        {
            get
            {
                return _TicketKind;
            }
            set
            {
                OnTicketKindChanging(value);
                ReportPropertyChanging("TicketKind");
                _TicketKind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketKind");
                OnTicketKindChanged();
            }
        }
        private global::System.Int32 _TicketKind;
        partial void OnTicketKindChanging(global::System.Int32 value);
        partial void OnTicketKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TicketPurchaseDate
        {
            get
            {
                return _TicketPurchaseDate;
            }
            set
            {
                OnTicketPurchaseDateChanging(value);
                ReportPropertyChanging("TicketPurchaseDate");
                _TicketPurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketPurchaseDate");
                OnTicketPurchaseDateChanged();
            }
        }
        private global::System.DateTime _TicketPurchaseDate;
        partial void OnTicketPurchaseDateChanging(global::System.DateTime value);
        partial void OnTicketPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TicketExpiryDate
        {
            get
            {
                return _TicketExpiryDate;
            }
            set
            {
                OnTicketExpiryDateChanging(value);
                ReportPropertyChanging("TicketExpiryDate");
                _TicketExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketExpiryDate");
                OnTicketExpiryDateChanged();
            }
        }
        private global::System.DateTime _TicketExpiryDate;
        partial void OnTicketExpiryDateChanging(global::System.DateTime value);
        partial void OnTicketExpiryDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Tickets_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Tickets_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Tickets_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Tickets_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_Tickets_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="TrainingDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingDefinition object.
        /// </summary>
        /// <param name="trainingDefinitionID">Initial value of the TrainingDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fitnessDelta">Initial value of the FitnessDelta property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static TrainingDefinition CreateTrainingDefinition(global::System.Int32 trainingDefinitionID, global::System.String name, global::System.Int32 fitnessDelta, global::System.Int32 time)
        {
            TrainingDefinition trainingDefinition = new TrainingDefinition();
            trainingDefinition.TrainingDefinitionID = trainingDefinitionID;
            trainingDefinition.Name = name;
            trainingDefinition.FitnessDelta = fitnessDelta;
            trainingDefinition.Time = time;
            return trainingDefinition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingDefinitionID
        {
            get
            {
                return _TrainingDefinitionID;
            }
            set
            {
                if (_TrainingDefinitionID != value)
                {
                    OnTrainingDefinitionIDChanging(value);
                    ReportPropertyChanging("TrainingDefinitionID");
                    _TrainingDefinitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingDefinitionID");
                    OnTrainingDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _TrainingDefinitionID;
        partial void OnTrainingDefinitionIDChanging(global::System.Int32 value);
        partial void OnTrainingDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FitnessDelta
        {
            get
            {
                return _FitnessDelta;
            }
            set
            {
                OnFitnessDeltaChanging(value);
                ReportPropertyChanging("FitnessDelta");
                _FitnessDelta = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FitnessDelta");
                OnFitnessDeltaChanged();
            }
        }
        private global::System.Int32 _FitnessDelta;
        partial void OnFitnessDeltaChanging(global::System.Int32 value);
        partial void OnFitnessDeltaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.Int32 _Time;
        partial void OnTimeChanging(global::System.Int32 value);
        partial void OnTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PendingTrainings_TrainingDefinitions", "PendingTrainings")]
        public EntityCollection<PendingTraining> PendingTrainings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PendingTraining>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "PendingTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PendingTraining>("SoccerModel.FK_PendingTrainings_TrainingDefinitions", "PendingTrainings", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
